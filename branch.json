{
  "id": "http://localhost:8000/schemas/v1.2/branch.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Branch",
  "type": "object",
  "properties": {
    "Organisation": {
      "id": "http://localhost:8000/schemas/v1.2/definitions/common/organisation.json#",
      "description": "Organisation",
      "type": "object",
      "properties": {
        "ParentOrganisation": {
          "description": "Parent organisation",
          "id": "http://localhost:8000/schemas/v1.2/definitions/common/organisation_identification.json#",
          "type": "object",
          "properties": {
            "LEI": {
              "description": "The LEI ID of the organisation",
              "id": "http://localhost:8000/schemas/v1.2/definitions/common/lei_identifier.json#",
              "type": "string",
              "pattern": "^[A-Z0-9]{18,18}[0-9]{2,2}$"
            },
            "BIC": {
              "description": "The BIC from the organisation",
              "id": "http://localhost:8000/schemas/v1.2/definitions/common/any_bic_identifier.json#",
              "type": "string",
              "pattern": "[A-Z]{6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3})?"
            },
            "OrganisationName": {
              "id": "http://localhost:8000/schemas/v1.2/definitions/common/organisation_name.json#",
              "description": "Organisation Name",
              "type": "object",
              "properties": {
                "LegalName": {
                  "description": "Legal Name of the organisation",
                  "id": "http://localhost:8000/schemas/v1.2/definitions/common/max_35_text.json#",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 35
                }
              },
              "required": ["LegalName"],
              "additionalProperties": false
            }
          },
          "required": ["OrganisationName"],
          "additionalProperties": false
        },
        "Brand": {
          "description": "Brand",
          "id": "http://localhost:8000/schemas/v1.2/definitions/common/brand.json#",
          "type": "object",
          "properties": {
            "TrademarkIPOCode": {
              "description": "The Intellectual Property Office (IPO) is the official body responsible for intellectual property (IP) rights including patents, designs, trademarks and copyright. (Code: UK or EU only)",
              "id": "http://localhost:8000/schemas/v1.2/definitions/common/trademark_ipo_code.json#",
              "type": "string",
              "enum": ["UK", "EU"]
            },
            "TrademarkID": {
              "description": "The trademark number that has been registered with the Intellectual Property Office. Note: The 2 letter IPO prefix should be omitted",
              "id": "http://localhost:8000/schemas/v1.2/definitions/common/max_35_text.json#",
              "type": "string",
              "minLength": 1,
              "maxLength": 35
            }
          },
          "required": ["TrademarkIPOCode", "TrademarkID"],
          "additionalProperties": false
        }
      },
      "required": ["ParentOrganisation", "Brand"],
      "additionalProperties": false
    },
    "BranchName": {
      "description": "Name by which a party is known and which is usually used to identify that party",
      "id": "http://localhost:8000/schemas/v1.2/definitions/common/max_35_text.json#",
      "type": "string",
      "minLength": 1,
      "maxLength": 35
    },
    "BranchIdentification": {
      "description": "Unique and unambiguous identification of a retail branch of a financial institution",
      "id": "http://localhost:8000/schemas/v1.2/definitions/common/max_35_text.json#",
      "type": "string",
      "minLength": 1,
      "maxLength": 35
    },
    "BranchType": {
      "id": "http://localhost:8000/schemas/v1.2/definitions/branch/branch_type.json#",
      "description": "Information on the type of branch",
      "type": "string",
      "enum": ["Physical", "Mobile"]
    },
    "Address": {
      "id": "http://localhost:8000/schemas/v1.2/definitions/common/postal_address_branch.json#",
      "description": "Postal Address",
      "type": "object",
      "properties": {
        "StreetName": {
          "description": "Name of a street or thoroughfare",
          "id": "http://localhost:8000/schemas/v1.2/definitions/common/max_70_text.json#",
          "type": "string",
          "minLength": 1,
          "maxLength": 70
        },
        "BuildingNumberOrName": {
          "description": "Number or Name that identifies the position of a building on a street",
          "id": "http://localhost:8000/schemas/v1.2/definitions/common/max_140_text.json#",
          "type": "string",
          "minLength": 1,
          "maxLength": 350
        },
        "PostCode": {
          "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail",
          "id": "http://localhost:8000/schemas/v1.2/definitions/common/max_16_text.json#",
          "type": "string",
          "minLength": 1,
          "maxLength": 16
        },
        "OptionalAddressField": {
          "description": "Directions for customers",
          "id": "http://localhost:8000/schemas/v1.2/definitions/common/max_140_text.json#",
          "type": "string",
          "minLength": 1,
          "maxLength": 350
        },
        "TownName": {
          "description": "Name of a built-up area, with defined boundaries, and a local government",
          "id": "http://localhost:8000/schemas/v1.2/definitions/common/max_35_text.json#",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "CountrySubDivision": {
          "description": "Identifies a subdivision of a country such as state, region, county",
          "id": "http://localhost:8000/schemas/v1.2/definitions/common/max_35_text.json#",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "Country": {
          "description": "Nation with its own government",
          "id": "http://localhost:8000/schemas/v1.2/definitions/common/country_code.json#",
          "type": "string",
          "pattern": "[A-Z]{2}"
        }
      },
      "required": ["Country"],
      "additionalProperties": false
    },
    "BranchDescription": {
      "description": "Description of the branch",
      "id": "http://localhost:8000/schemas/v1.2/definitions/common/max_140_text.json#",
      "type": "string",
      "minLength": 1,
      "maxLength": 140
    },
    "BranchPhoto": {
      "description": "Image related to the branch",
      "type": "string",
      "format": "uri"
    },
    "TelephoneNumber": {
      "description": "Collection of information that identifies a phone number, as defined by telecom services.",
      "id": "http://localhost:8000/schemas/v1.2/definitions/common/phone_number.json#",
      "type": "string",
      "pattern": "^[+][0-9]{1,3}-[0-9()+-]{1,30}$"
    },
    "AlternatePhone": {
      "type": "array",
      "items": {
        "id": "http://localhost:8000/schemas/v1.2/definitions/common/alternative_phone_number.json#",
        "description": "Alternative Phone Number",
        "type": "object",
        "properties": {
          "AlternateTelephoneNumber": {
            "description": "Collection of information that identifies a phone number, as defined by telecom services.",
            "id": "http://localhost:8000/schemas/v1.2/definitions/common/phone_number.json#",
            "type": "string",
            "pattern": "^[+][0-9]{1,3}-[0-9()+-]{1,30}$"
          },
          "AlternateTelephoneNumberDescription": {
            "description": "Description of the telephone number",
            "id": "http://localhost:8000/schemas/v1.2/definitions/common/max_35_text.json#",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          }
        },
        "additionalProperties": false
      }
    },
    "FaxNumber": {
      "description": "Collection of information that identifies a FAX number, as defined by telecom services.",
      "type": "array",
      "items": {
        "id": "http://localhost:8000/schemas/v1.2/definitions/common/phone_number.json#",
        "description": "Collection of information that identifies a phone number, as defined by telecom services.",
        "type": "string",
        "pattern": "^[+][0-9]{1,3}-[0-9()+-]{1,30}$"
      }
    },
    "GeographicLocation": {
      "id": "http://localhost:8000/schemas/v1.2/definitions/common/geographic_coordinates.json#",
      "description": "Geographic Coordinates",
      "type": "object",
      "properties": {
        "Latitude": {
          "description": "The Latitude measured in decimal format according to ISO 213",
          "id": "http://localhost:8000/schemas/v1.2/definitions/common/degree.json#",
          "type": "string",
          "pattern": "^-?\\d{1,3}\\.\\d{1,8}$"
        },
        "Longitude": {
          "description": "The longitude measured in decimal format according to ISO 213",
          "id": "http://localhost:8000/schemas/v1.2/definitions/common/degree.json#",
          "type": "string",
          "pattern": "^-?\\d{1,3}\\.\\d{1,8}$"
        }
      },
      "required": ["Latitude", "Longitude"],
      "additionalProperties": false
    },
    "DaysOfTheWeek": {
      "description": "Description on when the mobile branch is available. e.g. The weekend of Glastonbury festival; or Mondays and during the shrimp season also Wednesdays",
      "id": "http://localhost:8000/schemas/v1.2/definitions/common/max_35_text.json#",
      "type": "string",
      "minLength": 1,
      "maxLength": 35
    },
    "StopName": {
      "description": "Name of the stop of the mobile branch",
      "id": "http://localhost:8000/schemas/v1.2/definitions/common/max_15_text.json#",
      "type": "string",
      "minLength": 1,
      "maxLength": 15
    },
    "ArrivalTime": {
      "description": "Time that the mobile branch is scheduled to arrive",
      "id": "http://localhost:8000/schemas/v1.2/definitions/common/time.json#",
      "type": "string",
      "pattern": "^(([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].\\d{3})|(^24:00:00\\.000)(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
    },
    "DepartureTime": {
      "description": "Time that the mobile branch is scheduled to depart",
      "id": "http://localhost:8000/schemas/v1.2/definitions/common/time.json#",
      "type": "string",
      "pattern": "^(([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].\\d{3})|(^24:00:00\\.000)(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
    },
    "ParkingLocation": {
      "description": "Place where the mobile branch is located, such as between the news agent and the church.",
      "id": "http://localhost:8000/schemas/v1.2/definitions/common/max_50_text.json#",
      "type": "string",
      "minLength": 1,
      "maxLength": 50
    },
    "OpeningTimes": {
      "id": "http://localhost:8000/schemas/v1.2/definitions/branch/opening_details.json#",
      "description": "Branch Opening Times",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "OpeningDay": {
            "id": "http://localhost:8000/schemas/v1.2/definitions/common/day.json#",
            "description": "Day of the week",
            "enum": ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday", "Public and Bank Holiday"],
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "OpeningTime": {
            "id": "http://localhost:8000/schemas/v1.2/definitions/common/time.json#",
            "description": "ISOTime, local time hh:mm:ss.sss or time in utc hh:mm:ss.sssZ or time with timezone hh:mm:ss.sss+hh:mm hh:mm:ss.sss-hh:mm",
            "type": "string",
            "pattern": "^(([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].\\d{3})|(^24:00:00\\.000)(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
          },
          "ClosingTime": {
            "id": "http://localhost:8000/schemas/v1.2/definitions/common/time.json#",
            "description": "ISOTime, local time hh:mm:ss.sss or time in utc hh:mm:ss.sssZ or time with timezone hh:mm:ss.sss+hh:mm hh:mm:ss.sss-hh:mm",
            "type": "string",
            "pattern": "^(([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].\\d{3})|(^24:00:00\\.000)(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
          },
          "UnavailableStartTime": {
            "id": "http://localhost:8000/schemas/v1.2/definitions/common/time.json#",
            "description": "ISOTime, local time hh:mm:ss.sss or time in utc hh:mm:ss.sssZ or time with timezone hh:mm:ss.sss+hh:mm hh:mm:ss.sss-hh:mm",
            "type": "string",
            "pattern": "^(([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].\\d{3})|(^24:00:00\\.000)(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
          },
          "UnavailableFinishTime": {
            "id": "http://localhost:8000/schemas/v1.2/definitions/common/time.json#",
            "description": "ISOTime, local time hh:mm:ss.sss or time in utc hh:mm:ss.sssZ or time with timezone hh:mm:ss.sss+hh:mm hh:mm:ss.sss-hh:mm",
            "type": "string",
            "pattern": "^(([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].\\d{3})|(^24:00:00\\.000)(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
          }
        },
        "required": ["OpeningDay", "OpeningTime", "ClosingTime"]
      },
      "minItems": 1,
      "additionalProperties": false
    },
    "PlannedBranchClosure": {
      "type": "array",
      "items": {
        "id": "http://localhost:8000/schemas/v1.2/definitions/branch/closure.json#",
        "description": "Planned branch closure",
        "type": "object",
        "properties": {
          "StartDate": {
            "description": "Date when a branch is due to close temporarily or permanently",
            "id": "http://localhost:8000/schemas/v1.2/definitions/common/date.json#",
            "type": "string",
            "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
          },
          "EndDate": {
            "description": "Date when a branch is due to re-open following temporary closure",
            "id": "http://localhost:8000/schemas/v1.2/definitions/common/date.json#",
            "type": "string",
            "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
          }
        },
        "additionalProperties": false
      }
    },
    "AccessibilityTypes": {
      "id": "http://localhost:8000/schemas/v1.2/definitions/common/accessibility_types_code.json#",
      "description": "Information about the accessibility",
      "type": "string",
      "enum": ["AudioCashMachine", "AutomaticDoors", "ChairAccess", "DriveThru", "ExternalRamp", "InductionLoop", "InternalRamp", "LevelAccess", "LowerLevelCounter", "WheelchairAccess"]
    },
    "BranchSelfServeServiceName": {
      "type": "array",
      "items": {
        "id": "http://localhost:8000/schemas/v1.2/definitions/branch/branch_self_service_name_code.json#",
        "description": "Information about self service branch services",
        "type": "string",
        "enum": ["AccountVerificationService", "AssistedServiceCounter", "BusinessDepositTerminal", "CashChequeDepositMachineCoin", "CashChequeDepositMachineNoCoin", "ExternalAtmAudio", "ExternalAtmNoAudio", "ExternalQuickServicePoint", "InternalAtmAudio", "InternalAtmNoAudio", "InternalQuickServicePoint", "LodgementDevice", "OnlineBankingPoint", "QuickDeposit", "SaturdayCounterService", "SelfServiceAccountOpening", "StatementPrinter"]
      },
      "uniqueItems": true
    },
    "BranchOtherSelfServices": {
      "description": "Self Services not described in BranchSelfServeServiceName",
      "type": "array",
      "items": {
        "id": "http://localhost:8000/schemas/v1.2/definitions/common/max_140_text.json#",
        "description": "maxLength 350 text",
        "type": "string",
        "minLength": 1,
        "maxLength": 350
      }
    },
    "BranchMediatedServiceName": {
      "description": "Information about mediated branch facilities",
      "type": "array",
      "items": {
        "id": "http://localhost:8000/schemas/v1.2/definitions/branch_mediated_service_name_code.json#",
        "description": "Information about mediated branch facilities",
        "type": "string",
        "enum": ["BureauDeChange", "BusinessCounter", "CardIssuanceFacility", "CounterServices", "DriveThru", "MortgageAdvisor", "NightSafe", "OnDemandCurrency", "PremierCounter", "VideoBanking", "WheelChairAccess"]
      },
      "uniqueItems": true
    },
    "BranchOtherMediatedServices": {
      "description": "Mediated Services not described in BranchMediatedServiceName",
      "type": "array",
      "items": {
        "id": "http://localhost:8000/schemas/v1.2/definitions/common/max_140_text.json#",
        "description": "maxLength 350 text",
        "type": "string",
        "minLength": 1,
        "maxLength": 350
      }
    },
    "BranchFacilitiesName": {
      "description": "Information about branch facilities",
      "type": "array",
      "items": {
        "id": "http://localhost:8000/schemas/v1.2/definitions/branch/branch_facilities_name_code.json#",
        "description": "Information about branch facilities",
        "type": "string",
        "enum": ["BusinessITSupport", "CollectionLockers", "MeetingRooms", "Parking", "Wifi"]
      },
      "uniqueItems": true
    },
    "CustomerSegment": {
      "description": "Customer segment which the branch is able to service",
      "type": "array",
      "items": {
        "id": "http://localhost:8000/schemas/v1.2/definitions/branch/customer_segment_code.json#",
        "description": "Customer segment which the branch is able to service",
        "type": "string",
        "enum": ["Business", "Corporate", "Personal", "Premier", "Private", "Select", "SME", "Wealth"]
      },
      "uniqueItems": true
    },
    "BranchOtherFacilities": {
      "description": "Any other facilities not mentioned in BranchFacilitiesName",
      "type": "array",
      "items": {
        "id": "http://localhost:8000/schemas/v1.2/definitions/common/max_140_text.json#",
        "description": "maxLength 350 text",
        "type": "string",
        "minLength": 1,
        "maxLength": 350
      }
    },
    "ATMAtBranch": {
      "description": "Indicated whether an ATM is at the branch",
      "type": "boolean"
    }
  },
  "required": ["Organisation", "BranchIdentification", "BranchType", "CustomerSegment", "Address", "TelephoneNumber", "OpeningTimes", "ATMAtBranch"],
  "additionalProperties": false
}