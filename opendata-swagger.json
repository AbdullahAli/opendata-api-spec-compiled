{
  "swagger": "2.0",
  "info": {
    "version": "v1.2.1",
    "title": "Open Data API",
    "description": "Draft Swagger specification for OpenData"
  },
  "host": "api.openbanking.xyz",
  "basePath": "/open-banking/v1.2",
  "schemes": ["https"],
  "produces": ["application/prs.openbanking.opendata.v1.2+json"],
  "tags": [{
    "name": "Branch",
    "description": "Endpoint for getting Branch data"
  }, {
    "name": "ATM",
    "description": "Endpoint for getting ATM data"
  }, {
    "name": "PCA",
    "description": "Endpoint for getting Personal Current Account data"
  }, {
    "name": "BCA",
    "description": "Endpoint for getting Business Current Account data"
  }, {
    "name": "SME",
    "description": "Endpoint for getting Unsecured SME Loan data"
  }, {
    "name": "CCC",
    "description": "Endpoint for getting Commercial Credit Card data"
  }],
  "paths": {
    "/branches": {
      "get": {
        "tags": ["Branch"],
        "description": "Gets a list of all `Branch` objects.",
        "parameters": [{
          "name": "If-Modified-Since",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if modified since a given date",
          "in": "header",
          "required": false
        }, {
          "name": "If-None-Match",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "in": "header",
          "required": false
        }],
        "responses": {
          "200": {
            "description": "Successful response with a list of `Branch` data",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header",
                "default": "max-age=31536000"
              },
              "Etag": {
                "type": "string",
                "description": "A unique ID identifying whether this resource has changed"
              },
              "Cache-Control": {
                "type": "string",
                "description": "Describes how long this response can be cached",
                "default": "max-age=28800"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "title": "Meta data",
                  "type": "object",
                  "properties": {
                    "LastUpdated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "TotalResults": {
                      "type": "integer"
                    },
                    "Agreement": {
                      "type": "string",
                      "enum": ["Use of the APIs and any related data will be subject to the terms of the Open Licence and subject to terms and conditions"]
                    },
                    "License": {
                      "description": "Change Banking License",
                      "type": "string",
                      "format": "uri",
                      "enum": ["http://www.changebanking.uk/Open-Licence"]
                    },
                    "TermsOfUse": {
                      "description": "Change Banking Terms of Use",
                      "type": "string",
                      "format": "uri",
                      "enum": ["http://www.changebanking.uk/API-Terms"]
                    }
                  },
                  "required": ["LastUpdated", "TotalResults", "Agreement", "License", "TermsOfUse"],
                  "additionalProperties": false
                },
                "data": {
                  "type": "array",
                  "items": {
                    "title": "Branch",
                    "type": "object",
                    "properties": {
                      "Organisation": {
                        "description": "Organisation",
                        "type": "object",
                        "properties": {
                          "ParentGroupName": {
                            "description": "Parent company that owns or partially owns subsidiary organisations",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 350
                          },
                          "ParentGroupID": {
                            "description": "Unique and unambiguous identification of a financial institution, as assigned under an internationally recognised or proprietary identification scheme",
                            "type": "string",
                            "pattern": "[A-Z]{6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3})?"
                          },
                          "BrandName": {
                            "description": "Name or image that links products provided by a single provider together for the purpose of providing a common identity for marketing and other purposes.",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 35
                          },
                          "BrandID": {
                            "description": "Unique and unambiguous way to identify the brand",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 35
                          }
                        },
                        "required": ["ParentGroupName", "ParentGroupID", "BrandName", "BrandID"],
                        "additionalProperties": false
                      },
                      "BranchName": {
                        "description": "Name by which a party is known and which is usually used to identify that party",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 35
                      },
                      "BranchIdentification": {
                        "description": "Unique and unambiguous identification of a retail branch of a financial institution",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 35
                      },
                      "BranchType": {
                        "description": "Information on the type of branch",
                        "type": "string",
                        "enum": ["Physical", "Mobile"]
                      },
                      "Address": {
                        "description": "Postal Address",
                        "type": "object",
                        "properties": {
                          "StreetName": {
                            "description": "Name of a street or thoroughfare",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 70
                          },
                          "BuildingNumberOrName": {
                            "description": "Number or Name that identifies the position of a building on a street",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 350
                          },
                          "PostCode": {
                            "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 16
                          },
                          "OptionalAddressField": {
                            "description": "Additional field; often directions",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 350
                          },
                          "TownName": {
                            "description": "Name of a built-up area, with defined boundaries, and a local government",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 35
                          },
                          "CountrySubDivision": {
                            "description": "Identifies a subdivision of a country such as state, region, county",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 35
                          },
                          "Country": {
                            "description": "Nation with its own government",
                            "type": "string",
                            "pattern": "[A-Z]{2}"
                          }
                        },
                        "required": ["StreetName", "PostCode", "Country", "BuildingNumberOrName"],
                        "additionalProperties": false
                      },
                      "BranchDescription": {
                        "description": "Description of the branch",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 140
                      },
                      "BranchPhoto": {
                        "description": "Image related to the branch",
                        "type": "string",
                        "format": "uri"
                      },
                      "TelephoneNumber": {
                        "description": "Collection of information that identifies a phone number, as defined by telecom services.",
                        "type": "string",
                        "pattern": "^[+][0-9]{1,3}-[0-9()+-]{1,30}$"
                      },
                      "AlternatePhone": {
                        "type": "array",
                        "items": {
                          "description": "Alternative Phone Number",
                          "type": "object",
                          "properties": {
                            "AlternateTelephoneNumber": {
                              "description": "Collection of information that identifies a phone number, as defined by telecom services.",
                              "type": "string",
                              "pattern": "^[+][0-9]{1,3}-[0-9()+-]{1,30}$"
                            },
                            "AlternateTelephoneNumberDescription": {
                              "description": "Description of the telephone number",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 35
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "FaxNumber": {
                        "description": "Collection of information that identifies a FAX number, as defined by telecom services.",
                        "type": "array",
                        "items": {
                          "description": "Collection of information that identifies a phone number, as defined by telecom services.",
                          "type": "string",
                          "pattern": "^[+][0-9]{1,3}-[0-9()+-]{1,30}$"
                        }
                      },
                      "GeographicLocation": {
                        "description": "Geographic Coordinates",
                        "type": "object",
                        "properties": {
                          "Latitude": {
                            "description": "Latitude measured in degrees, minutes and seconds, following by 'N' for North and 'S' for South of the Equator (for example 48°51'29'' N for the Eiffel Tower latitude)",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 16
                          },
                          "Longitude": {
                            "description": "Angular measurement of the distance of a location on the Earth East or West of the Greenwich Observatory. The longitude is measured in degrees, minutes and seconds, following by 'E' for East and 'W' for West (for example 2°17'4'' E for the Eiffel Tower longitude)",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 16
                          }
                        },
                        "required": ["Latitude", "Longitude"],
                        "additionalProperties": false
                      },
                      "DaysOfTheWeek": {
                        "description": "Day of the week that the mobile branch is available",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 35
                      },
                      "StopName": {
                        "description": "Name of the stop of the mobile branch",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 15
                      },
                      "ArrivalTime": {
                        "description": "Arrival time of the mobile branch",
                        "type": "string",
                        "pattern": "^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].\\d{3}(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
                      },
                      "DepartureTime": {
                        "description": "Departure time of the mobile branch",
                        "type": "string",
                        "pattern": "^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].\\d{3}(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
                      },
                      "ParkingLocation": {
                        "description": "Parking place of the mobile branch",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                      },
                      "OpeningTimes": {
                        "description": "Branch Opening Times",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "OpeningDay": {
                              "description": "Day of the week",
                              "enum": ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday", "Public and Bank Holiday"],
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 35
                            },
                            "OpeningTime": {
                              "description": "ISOTime, local time hh:mm:ss.sss or time in utc hh:mm:ss.sssZ or time with timezone hh:mm:ss.sss+hh:mm hh:mm:ss.sss-hh:mm",
                              "type": "string",
                              "pattern": "^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].\\d{3}(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
                            },
                            "ClosingTime": {
                              "description": "ISOTime, local time hh:mm:ss.sss or time in utc hh:mm:ss.sssZ or time with timezone hh:mm:ss.sss+hh:mm hh:mm:ss.sss-hh:mm",
                              "type": "string",
                              "pattern": "^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].\\d{3}(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
                            },
                            "UnavailableStartTime": {
                              "description": "ISOTime, local time hh:mm:ss.sss or time in utc hh:mm:ss.sssZ or time with timezone hh:mm:ss.sss+hh:mm hh:mm:ss.sss-hh:mm",
                              "type": "string",
                              "pattern": "^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].\\d{3}(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
                            },
                            "UnavailableFinishTime": {
                              "description": "ISOTime, local time hh:mm:ss.sss or time in utc hh:mm:ss.sssZ or time with timezone hh:mm:ss.sss+hh:mm hh:mm:ss.sss-hh:mm",
                              "type": "string",
                              "pattern": "^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].\\d{3}(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
                            }
                          },
                          "required": ["OpeningDay", "OpeningTime", "ClosingTime"]
                        },
                        "minItems": 1,
                        "additionalProperties": false
                      },
                      "PlannedBranchClosure": {
                        "type": "array",
                        "items": {
                          "description": "Planned branch closure",
                          "type": "object",
                          "properties": {
                            "StartDate": {
                              "description": "Date when a branch is due to close temporarily or permanently",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "EndDate": {
                              "description": "Date when a branch is due to re-open following temporary closure",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "AccessibilityTypes": {
                        "description": "Information about the accessibility",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                          "type": "string",
                          "enum": ["Automatic Doors", "Lower Level Counter", "Induction Loop", "Wheelchair Access", "External Ramp", "Internal Ramp", "Level Access", "Helping Hand Unit"]
                        }
                      },
                      "BranchSelfServeServiceName": {
                        "type": "array",
                        "items": {
                          "description": "Information about self service branch services",
                          "type": "string",
                          "enum": ["Internal ATM with Audio", "External ATM with Audio", "Internal ATM without Audio", "External ATM without Audio", "Online Banking Point", "Assisted Service Counter", "Quick Deposit", "External Quick Service Point", "Internal Quick Service Point", "Digital Self Service Account Opening", "Business Deposit Terminal", "Account Verification Service", "Statement Printer", "Lodgement Device", "Saturday Counter Service", "Cash and Cheque Deposit Machine (Coin)", "Cash and Cheque Deposit Machine (No Coin)"]
                        },
                        "uniqueItems": true
                      },
                      "BranchSelfServeServiceDescription": {
                        "description": "Additional information about self service branch services",
                        "type": "array",
                        "items": {
                          "description": "maxLength 350 text",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 350
                        }
                      },
                      "BranchMediatedServiceName": {
                        "description": "Information about mediated branch facilities",
                        "type": "array",
                        "items": {
                          "description": "Information about mediated branch facilities",
                          "type": "string",
                          "enum": ["Counter Service", "Mortgage Advisor", "Night Safe", "Video Banking", "Premier Counter", "Card Issuance Facilities", "Bureau de Change", "Business Counter", "On Demand Currency"]
                        },
                        "uniqueItems": true
                      },
                      "BranchMediatedServiceDescription": {
                        "description": "Additional information about mediated branch facilities, such as waiting areas with seats available for business banking (if waiting)",
                        "type": "array",
                        "items": {
                          "description": "maxLength 350 text",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 350
                        }
                      },
                      "BranchFacilitiesName": {
                        "description": "Information about branch facilities",
                        "type": "array",
                        "items": {
                          "description": "Information about branch facilities",
                          "type": "string",
                          "enum": ["Wifi", "Parking", "Meeting Room(s)", "Eagle Lab", "Amazon Click and Collect Lockers"]
                        },
                        "uniqueItems": true
                      },
                      "CustomerSegment": {
                        "description": "Customer segment which the branch is able to service",
                        "type": "array",
                        "items": {
                          "description": "Customer segment which the branch is able to service",
                          "type": "string",
                          "enum": ["Personal", "Business", "SME", "Wealth", "Corporate", "Premier Branch"]
                        },
                        "uniqueItems": true
                      },
                      "BranchFacilitiesDescription": {
                        "description": "Additional information about branch facilities, such as specific lights",
                        "type": "array",
                        "items": {
                          "description": "maxLength 350 text",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 350
                        }
                      },
                      "ATMAtBranch": {
                        "description": "Indicated whether an ATM is at the branch",
                        "type": "boolean"
                      }
                    },
                    "required": ["Organisation", "BranchIdentification", "BranchType", "CustomerSegment", "Address", "TelephoneNumber", "GeographicLocation", "OpeningTimes", "ATMAtBranch"],
                    "additionalProperties": false
                  }
                }
              },
              "required": ["meta", "data"],
              "additionalProperties": false
            }
          },
          "400": {
            "description": "You have sent a request which could not be understood.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "400 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["400"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Bad request"]
                },
                "description": {
                  "type": "string",
                  "enum": ["You have sent a request which could not be understood."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "408": {
            "description": "Your client has failed to submit a request, and a timeout has occurred.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "408 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["408"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Client timeout"]
                },
                "description": {
                  "type": "string",
                  "enum": ["Your client has failed to submit a request, and a timeout has occurred."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "429": {
            "description": "You have requested this resource too often. Slow down.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "429 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["429"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Too many requests"]
                },
                "description": {
                  "type": "string",
                  "enum": ["You have requested this resource too often. Slow down."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "500": {
            "description": "An error occurred on the server. No further information is available.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "500 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["500"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Internal server error"]
                },
                "description": {
                  "type": "string",
                  "enum": ["An error occurred on the server. No further information is available."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "503 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["503"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Service temporarily unavailable"]
                },
                "description": {
                  "type": "string",
                  "enum": ["The service is temporarily unavailable."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "default": {
            "description": "A standard error response.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "Error object",
              "type": "object",
              "properties": {
                "status": {
                  "description": "This corresponds to the HTTP status code",
                  "type": "string"
                },
                "title": {
                  "description": "A short title of the type of error",
                  "type": "string"
                },
                "description": {
                  "description": "Further details describing the error",
                  "type": "string"
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          }
        }
      },
      "head": {
        "tags": ["Branch"],
        "description": "Gets header information on the current set of `Branch` data",
        "parameters": [{
          "name": "If-Modified-Since",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if modified since a given date",
          "in": "header",
          "required": false
        }, {
          "name": "If-None-Match",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "in": "header",
          "required": false
        }],
        "responses": {
          "default": {
            "description": "No response",
            "schema": {
              "title": "No response",
              "type": "object",
              "properties": {}
            }
          }
        }
      }
    },
    "/atms": {
      "get": {
        "tags": ["ATM"],
        "description": "Gets a list of all `ATM` objects.",
        "parameters": [{
          "name": "If-Modified-Since",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if modified since a given date",
          "in": "header",
          "required": false
        }, {
          "name": "If-None-Match",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "in": "header",
          "required": false
        }],
        "responses": {
          "200": {
            "description": "Successful response with a list of `ATM` data",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header",
                "default": "max-age=31536000"
              },
              "Etag": {
                "type": "string",
                "description": "A unique ID identifying whether this resource has changed"
              },
              "Cache-Control": {
                "type": "string",
                "description": "Describes how long this response can be cached",
                "default": "max-age=28800"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "title": "Meta data",
                  "type": "object",
                  "properties": {
                    "LastUpdated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "TotalResults": {
                      "type": "integer"
                    },
                    "Agreement": {
                      "type": "string",
                      "enum": ["Use of the APIs and any related data will be subject to the terms of the Open Licence and subject to terms and conditions"]
                    },
                    "License": {
                      "description": "Change Banking License",
                      "type": "string",
                      "format": "uri",
                      "enum": ["http://www.changebanking.uk/Open-Licence"]
                    },
                    "TermsOfUse": {
                      "description": "Change Banking Terms of Use",
                      "type": "string",
                      "format": "uri",
                      "enum": ["http://www.changebanking.uk/API-Terms"]
                    }
                  },
                  "required": ["LastUpdated", "TotalResults", "Agreement", "License", "TermsOfUse"],
                  "additionalProperties": false
                },
                "data": {
                  "type": "array",
                  "items": {
                    "title": "ATM",
                    "type": "object",
                    "properties": {
                      "Organisation": {
                        "description": "Organisation",
                        "type": "object",
                        "properties": {
                          "ParentGroupName": {
                            "description": "Parent company that owns or partially owns subsidiary organisations",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 350
                          },
                          "ParentGroupID": {
                            "description": "Unique and unambiguous identification of a financial institution, as assigned under an internationally recognised or proprietary identification scheme",
                            "type": "string",
                            "pattern": "[A-Z]{6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3})?"
                          },
                          "BrandName": {
                            "description": "Name or image that links products provided by a single provider together for the purpose of providing a common identity for marketing and other purposes.",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 35
                          },
                          "BrandID": {
                            "description": "Unique and unambiguous way to identify the brand",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 35
                          }
                        },
                        "required": ["ParentGroupName", "ParentGroupID", "BrandName", "BrandID"],
                        "additionalProperties": false
                      },
                      "BranchIdentification": {
                        "description": "Unique and unambiguous identification of a retail branch of a financial institution",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 35
                      },
                      "ATMID": {
                        "description": "ATM terminal device identification for the acquirer and the issuer",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 35
                      },
                      "LocationCategory": {
                        "description": "Indicates the environment of the ATM",
                        "type": "string",
                        "enum": ["Airport", "Bank Office", "Bank Specialised Outlet", "Branch", "Branch Customer Area", "Branch Lobby", "Branch Wall", "Bureau de Change", "Coach Station", "Convenience Store", "Exhibition Centre", "Factory", "Office", "Financial Institution", "Hospital", "Hotel", "House of Commons", "House of Lords", "Leisure Centre", "Ministry of Defence", "Motorway Services", "Petrol Station", "Pleasure Park", "Public House", "Railway Station", "Railway Station (Underground)", "Remote Unit", "Retailer", "Department Store", "Retailer Outlet", "Seaport", "Shopping Centre", "Supermarket", "University", "College", "Bank External", "Restricted Access", "Commercial Space"]
                      },
                      "SiteID": {
                        "description": "Site identifying code, where ATM is located",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 35
                      },
                      "SiteName": {
                        "description": "Site identifying name, where ATM is located",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 35
                      },
                      "Address": {
                        "description": "Postal Address",
                        "type": "object",
                        "properties": {
                          "StreetName": {
                            "description": "Name of a street or thoroughfare",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 70
                          },
                          "BuildingNumberOrName": {
                            "description": "Number or Name that identifies the position of a building on a street",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 350
                          },
                          "PostCode": {
                            "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 16
                          },
                          "OptionalAddressField": {
                            "description": "Additional field; often directions",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 350
                          },
                          "TownName": {
                            "description": "Name of a built-up area, with defined boundaries, and a local government",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 35
                          },
                          "CountrySubDivision": {
                            "description": "Identifies a subdivision of a country such as state, region, county",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 35
                          },
                          "Country": {
                            "description": "Nation with its own government",
                            "type": "string",
                            "pattern": "[A-Z]{2}"
                          }
                        },
                        "required": ["StreetName", "PostCode", "Country"],
                        "additionalProperties": false
                      },
                      "GeographicLocation": {
                        "description": "Geographic Coordinates",
                        "type": "object",
                        "properties": {
                          "Latitude": {
                            "description": "Latitude measured in degrees, minutes and seconds, following by 'N' for North and 'S' for South of the Equator (for example 48°51'29'' N for the Eiffel Tower latitude)",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 16
                          },
                          "Longitude": {
                            "description": "Angular measurement of the distance of a location on the Earth East or West of the Greenwich Observatory. The longitude is measured in degrees, minutes and seconds, following by 'E' for East and 'W' for West (for example 2°17'4'' E for the Eiffel Tower longitude)",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 16
                          }
                        },
                        "required": ["Latitude", "Longitude"],
                        "additionalProperties": false
                      },
                      "AccessibilityTypes": {
                        "description": "Information about the accessibility",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                          "type": "string",
                          "enum": ["Automatic Doors", "Lower Level Counter", "Induction Loop", "Wheelchair Access", "External Ramp", "Internal Ramp", "Level Access", "Helping Hand Unit"]
                        }
                      },
                      "SupportedLanguages": {
                        "description": "Languages that the ATM supports",
                        "type": "array",
                        "items": {
                          "description": "must be ISO 693-2 codes",
                          "type": "string"
                        },
                        "minItems": 1
                      },
                      "ATMServices": {
                        "description": "Information about ATM services",
                        "type": "array",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                          "description": "Information about ATM services",
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "type": "string",
                            "enum": ["Cash Withdrawal", "Cash Deposits", "Mobile Banking Registration", "PIN Change", "Mobile Phone Top Up", "PingIT Registration", "Bill Payments", "Mini Statements", "Balance", "Fast Cash", "PIN Activation", "Charity Donation", "Cheque Book Request"]
                          }
                        }
                      },
                      "AdditionalATMServices": {
                        "type": "array",
                        "items": {
                          "description": "maxLength 350 text",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 350
                        }
                      },
                      "Currency": {
                        "description": "Defines currency type available for dispense",
                        "type": "array",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                          "description": "Active or Historic Currency Code",
                          "type": "string",
                          "pattern": "[A-Z]{3}"
                        }
                      },
                      "MinimumValueDispensed": {
                        "description": "Minimum currency denominations usually available",
                        "type": "string",
                        "enum": ["£ 5", "£ 10", "£ 20", "£ 50", "£ 100"]
                      }
                    },
                    "required": ["Organisation", "ATMID", "Address", "GeographicLocation", "SupportedLanguages", "ATMServices", "Currency"],
                    "additionalProperties": false
                  }
                }
              },
              "required": ["meta", "data"],
              "additionalProperties": false
            }
          },
          "400": {
            "description": "You have sent a request which could not be understood.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "400 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["400"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Bad request"]
                },
                "description": {
                  "type": "string",
                  "enum": ["You have sent a request which could not be understood."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "408": {
            "description": "Your client has failed to submit a request, and a timeout has occurred.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "408 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["408"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Client timeout"]
                },
                "description": {
                  "type": "string",
                  "enum": ["Your client has failed to submit a request, and a timeout has occurred."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "429": {
            "description": "You have requested this resource too often. Slow down.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "429 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["429"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Too many requests"]
                },
                "description": {
                  "type": "string",
                  "enum": ["You have requested this resource too often. Slow down."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "500": {
            "description": "An error occurred on the server. No further information is available.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "500 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["500"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Internal server error"]
                },
                "description": {
                  "type": "string",
                  "enum": ["An error occurred on the server. No further information is available."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "503 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["503"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Service temporarily unavailable"]
                },
                "description": {
                  "type": "string",
                  "enum": ["The service is temporarily unavailable."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "default": {
            "description": "A standard error response.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "Error object",
              "type": "object",
              "properties": {
                "status": {
                  "description": "This corresponds to the HTTP status code",
                  "type": "string"
                },
                "title": {
                  "description": "A short title of the type of error",
                  "type": "string"
                },
                "description": {
                  "description": "Further details describing the error",
                  "type": "string"
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          }
        }
      },
      "head": {
        "tags": ["ATM"],
        "description": "Gets header information on the current set of `ATM` data",
        "parameters": [{
          "name": "If-Modified-Since",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if modified since a given date",
          "in": "header",
          "required": false
        }, {
          "name": "If-None-Match",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "in": "header",
          "required": false
        }],
        "responses": {
          "default": {
            "description": "No response",
            "schema": {
              "title": "No response",
              "type": "object",
              "properties": {}
            }
          }
        }
      }
    },
    "/personal-current-accounts": {
      "get": {
        "tags": ["PCA"],
        "description": "Gets a list of all `Personal Current Account` objects.",
        "parameters": [{
          "name": "If-Modified-Since",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if modified since a given date",
          "in": "header",
          "required": false
        }, {
          "name": "If-None-Match",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "in": "header",
          "required": false
        }],
        "responses": {
          "200": {
            "description": "Successful response with a list of `Personal Current Account` data",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header",
                "default": "max-age=31536000"
              },
              "Etag": {
                "type": "string",
                "description": "A unique ID identifying whether this resource has changed"
              },
              "Cache-Control": {
                "type": "string",
                "description": "Describes how long this response can be cached",
                "default": "max-age=28800"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "title": "Meta data",
                  "type": "object",
                  "properties": {
                    "LastUpdated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "TotalResults": {
                      "type": "integer"
                    },
                    "Agreement": {
                      "type": "string",
                      "enum": ["Use of the APIs and any related data will be subject to the terms of the Open Licence and subject to terms and conditions"]
                    },
                    "License": {
                      "description": "Change Banking License",
                      "type": "string",
                      "format": "uri",
                      "enum": ["http://www.changebanking.uk/Open-Licence"]
                    },
                    "TermsOfUse": {
                      "description": "Change Banking Terms of Use",
                      "type": "string",
                      "format": "uri",
                      "enum": ["http://www.changebanking.uk/API-Terms"]
                    }
                  },
                  "required": ["LastUpdated", "TotalResults", "Agreement", "License", "TermsOfUse"],
                  "additionalProperties": false
                },
                "data": {
                  "type": "array",
                  "items": {
                    "description": "Personal Current Account",
                    "type": "object",
                    "properties": {
                      "Organisation": {
                        "description": "Organisation",
                        "type": "object",
                        "properties": {
                          "ParentGroupName": {
                            "description": "Parent company that owns or partially owns subsidiary organisations",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 350
                          },
                          "ParentGroupID": {
                            "description": "Unique and unambiguous identification of a financial institution, as assigned under an internationally recognised or proprietary identification scheme",
                            "type": "string",
                            "pattern": "[A-Z]{6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3})?"
                          },
                          "BrandName": {
                            "description": "Name or image that links products provided by a single provider together for the purpose of providing a common identity for marketing and other purposes.",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 35
                          },
                          "BrandID": {
                            "description": "Unique and unambiguous way to identify the brand",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 35
                          }
                        },
                        "required": ["ParentGroupName", "ParentGroupID", "BrandName", "BrandID"],
                        "additionalProperties": false
                      },
                      "ProductType": {
                        "description": "Descriptive code for the product category",
                        "type": "string",
                        "enum": ["PCA"]
                      },
                      "ProductName": {
                        "description": "The name of the product used for marketing purposes from a customer perspective. i.e. what the customer would recognise",
                        "type": "string"
                      },
                      "ProductSegment": {
                        "type": "array",
                        "items": {
                          "description": "Marketing or industry segment that the product is designed for",
                          "type": "string",
                          "enum": ["Student", "Graduate", "Child", "Package", "Basic", "General", "Business", "Youth"]
                        },
                        "minItems": 1
                      },
                      "InternationalPaymentsSupported": {
                        "description": "Indicates that the account supports international payments",
                        "type": "boolean"
                      },
                      "ProductIdentifier": {
                        "description": "Identifier within the parent organisation for the product. Must be unique in the organisation",
                        "type": "string"
                      },
                      "CardWithdrawalLimit": {
                        "description": "The daily Limit that a customer can get via the ATM. This describes the default limit rather than the maximum",
                        "type": "string",
                        "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                      },
                      "ProductDescription": {
                        "description": "Description of the product provided by the parent organisation",
                        "type": "string"
                      },
                      "TsandCs": {
                        "description": "URL provided by the parent organisation which redirects to the current T&Cs",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1
                      },
                      "AccessChannels": {
                        "description": "Ways to interact with the bank when managing account",
                        "type": "array",
                        "items": {
                          "description": "Channel",
                          "type": "string",
                          "enum": ["Branch", "Post", "Internet", "Phone", "Smartphone", "Text", "Call centre"]
                        },
                        "minItems": 1
                      },
                      "CardType": {
                        "description": "Card Type available",
                        "type": "array",
                        "items": {
                          "description": "Indicates the card scheme",
                          "type": "string",
                          "enum": ["Debit Visa", "Debit Mastercard", "Cashcard"]
                        },
                        "minItems": 1
                      },
                      "Contactless": {
                        "description": "Does the card issued have contactless facility",
                        "type": "boolean"
                      },
                      "MobileWallet": {
                        "description": "Mobile wallet supported by this product. A mobile wallet being any electronic device that allows an individual to make electronic commerce transactions",
                        "type": "array",
                        "items": {
                          "description": "Mobile wallet supported by this product. A mobile wallet being any electronic device that allows an individual to make electronic commerce transactions",
                          "type": "string",
                          "enum": ["Apple Pay", "Android Pay", "Samsung Pay", "Vodafone Wallet", "Issuer Mobile App"]
                        }
                      },
                      "CardNotes": {
                        "description": "Optional additional notes to supplement the card details",
                        "type": "string"
                      },
                      "ChequeBookAvailable": {
                        "description": "Can a chequebook be issued",
                        "type": "boolean"
                      },
                      "CreditScoringPartOfAccountOpeningForGettingAnAccount": {
                        "description": "Indicates whether a credit check performed on an inquiry to open an account is submitted",
                        "type": "boolean"
                      },
                      "CreditScoringPartOfAccountOpeningIsAHardOrSoftCreditScore": {
                        "description": "Describes the type of credit scoring",
                        "type": "array",
                        "items": {
                          "description": "Indicates the type of scoring",
                          "type": "string",
                          "enum": ["Hard", "Soft"]
                        }
                      },
                      "CreditScoringPartOfAccountOpeningText": {
                        "description": "Details on the specific credit scoring",
                        "type": "string"
                      },
                      "CreditScoringPartOfAccountOpeningForIDVerification": {
                        "description": "Indicates whether a credit check is used to check the address of a potential new account holder",
                        "type": "boolean"
                      },
                      "CreditScoringPartOfAccountOpeningIDVerificationIsAHardOrSoftCreditScore": {
                        "type": "array",
                        "items": {
                          "description": "Indicates the type of scoring",
                          "type": "string",
                          "enum": ["Hard", "Soft"]
                        }
                      },
                      "CreditScoringPartOfAccountOpeningIDVerificationText": {
                        "description": "Details on the specific credit scoring",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "MonthlyMaximumCharge": {
                        "description": "The maximum Relevant Charges that could accrue in relation to that PCA in any month as a result of exceeding or attempting to exceed a Pre-agreed credit limit on the PCA. i.e. it does not include any charges that are applied through the normal operation of the account such as overdraft interest charges whilst within an agreed limit",
                        "type": "string",
                        "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                      },
                      "ProductURL": {
                        "description": "URL provided by the organisation which redirects to the product (on live products only). There might be more than one product at a given URL",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uri"
                        },
                        "minItems": 1
                      },
                      "Currency": {
                        "description": "Currency of the Account. Default to GBP at present",
                        "type": "array",
                        "items": {
                          "description": "Active or Historic Currency Code",
                          "type": "string",
                          "pattern": "[A-Z]{3}"
                        },
                        "minItems": 1
                      },
                      "OverdraftOffered": {
                        "description": "Indicates whether an overdraft offered for this account",
                        "type": "boolean"
                      },
                      "Feature": {
                        "type": "array",
                        "items": {
                          "description": "Account Features",
                          "type": "object",
                          "properties": {
                            "ExistingFeature": {
                              "description": "Indicates whether the account has any feature",
                              "type": "boolean"
                            },
                            "ProductSubType": {
                              "description": "Describes if the offering is promotional, regular or a description of a future state",
                              "type": "string",
                              "enum": ["Promotional", "Regular", "Future Regular Terms"]
                            },
                            "StartPromotionOrFutureTerms": {
                              "description": "Describes the start date",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "StopPromotionOrFutureTerms": {
                              "description": "Describes the end date",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "LengthPromotionalInDays": {
                              "description": "Describes the length if only a duration is given instead of a date",
                              "type": "integer"
                            },
                            "DateOfChange": {
                              "description": "Date of the change if it refers to future terms",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "FeatureDetails": {
                              "description": "Feature details",
                              "type": "array",
                              "items": {
                                "description": "Feature Details",
                                "type": "object",
                                "properties": {
                                  "FeatureSubType": {
                                    "description": "Describes if the offering is promotional, regular or a description of a future state",
                                    "type": "string",
                                    "enum": ["Promotional", "Regular", "Future Regular Terms"]
                                  },
                                  "StartPromotionOrFutureTerms": {
                                    "description": "Describes the start date",
                                    "type": "string",
                                    "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                  },
                                  "StopPromotionOrFutureTerms": {
                                    "description": "Describes the end date",
                                    "type": "string",
                                    "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                  },
                                  "LengthPromotionalInDays": {
                                    "description": "Describes the length if only a duration is given instead of a date",
                                    "type": "integer"
                                  },
                                  "DateOfChange": {
                                    "description": "Date of the change if it refers to future terms",
                                    "type": "string",
                                    "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                  },
                                  "FeatureType": {
                                    "description": "Type that represents the nature of the feature",
                                    "type": "string"
                                  },
                                  "FeatureName": {
                                    "description": "The name of the feature",
                                    "type": "string"
                                  },
                                  "FeatureDescription": {
                                    "description": "A textual explanation of what the feature",
                                    "type": "string"
                                  },
                                  "FeatureValue": {
                                    "description": "The value or values permissible for a specific feature for an individual product representing a product characteristic",
                                    "type": "string"
                                  },
                                  "CriteriaType": {
                                    "description": "Criteria that is required in order to be eligible for the feature",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": ["ExistingFeature"]
                        }
                      },
                      "CAPricing": {
                        "type": "array",
                        "items": {
                          "description": "Card Price",
                          "type": "object",
                          "properties": {
                            "ProductSubType": {
                              "description": "Describes if the offering is promotional, regular or a description of a future state",
                              "type": "string",
                              "enum": ["Promotional", "Regular", "Future Regular Terms"]
                            },
                            "CAPricingItem": {
                              "description": "Card Pricing",
                              "type": "object",
                              "properties": {
                                "StartPromotionOrFutureTerms": {
                                  "description": "Describes the start date",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "StopPromotionOrFutureTerms": {
                                  "description": "Describes the end date",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "LengthPromotionalInDays": {
                                  "description": "Describes the length if only a duration is given instead of a date",
                                  "type": "integer"
                                },
                                "DateOfChange": {
                                  "description": "Date of the change if it refers to future terms",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "ExchangeRateAdjustment": {
                                  "description": "The margin added, by certain card issuers, to the scheme rate in order to arrive at the exchange rate qouted as the reference exchange rate to the cardholder",
                                  "type": "string",
                                  "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "required": ["ProductSubType", "CAPricingItem"],
                          "additionalProperties": false
                        },
                        "minItems": 1
                      },
                      "Eligibility": {
                        "description": "Eligibility",
                        "type": "object",
                        "properties": {
                          "AgeRestricted": {
                            "description": "Indicates a customer's age is part of eligibility criteria",
                            "type": "boolean"
                          },
                          "MinimumAge": {
                            "description": "Minimum age, in years, required to hold an account",
                            "type": "integer"
                          },
                          "MaximumAge": {
                            "description": "Maximum age, in years, allowed to hold the account",
                            "type": "integer"
                          },
                          "MaximumAgeToOpen": {
                            "description": "Maximum age, in years, to open an account",
                            "type": "integer"
                          },
                          "OtherFinancialHoldingRequired": {
                            "description": "Indicates that it is necessary to hold another product with the bank in order to be eligible for this product or feature",
                            "type": "boolean"
                          },
                          "Description": {
                            "description": "One paragraph detailing the eligibility",
                            "type": "string"
                          },
                          "IncomeTurnoverRelated": {
                            "description": "Indicates if eligibility linked to income",
                            "type": "boolean"
                          },
                          "SingleJointIncome": {
                            "description": "Minimum Income Source. For certain products a minimum income is required. This can be mandated as to the single income or to a joint income. This field describes this",
                            "type": "string",
                            "enum": ["Single Income", "Joint Income", "Single or Joint Income"]
                          },
                          "MinimumIncomeTurnoverAmount": {
                            "description": "Minimum income / Turnover required to hold the product",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "MinimumIncomeTurnoverCurrency": {
                            "description": "Minimum income / Turnover Currency",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "IncomeCondition": {
                            "description": "Stipulates any particular definition of income that applies to the income eligibility and/or method by which income must paid into the account (eg Salary DD)",
                            "type": "string"
                          },
                          "MinIncomeTurnoverPaidIntoAccount": {
                            "description": "Minimum Income Amount required to paid into the account",
                            "type": "integer"
                          },
                          "MinimumIncomeFrequency": {
                            "description": "The frequency that the minimum mentioned before is deposited in the account. Yearly is very important for premium accounts",
                            "type": "string",
                            "enum": ["Daily", "Weekly", "Monthly", "Yearly", "University Term", "Flexible"]
                          },
                          "AnnualBusinessTurnover": {
                            "description": "Annual Business Turnover",
                            "type": "integer"
                          },
                          "AnnualBusinessTurnoverCurrency": {
                            "description": "Annual Business Turnover Currency",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "ResidencyRestricted": {
                            "description": "Indicates a customer's residency forms part of the eligibility criteria",
                            "type": "boolean"
                          },
                          "ResidencyRestrictedRegion": {
                            "description": "Indicates a customer must be current resident of a geographic area/country",
                            "type": "string",
                            "enum": ["UK", "EEA", "EU", "EFTA", "GB - ENG", "GB - NIR", "GB - SCT", "GB - WLS", "IRL"]
                          },
                          "MaxNumberOfAccounts": {
                            "description": "Maximum number of the same prodcut the customer may hold",
                            "type": "string"
                          },
                          "ThirdSectorOrganisations": {
                            "description": "Is the product available to operate as a Clubs or Societies account?",
                            "type": "boolean"
                          },
                          "MinimumDeposit": {
                            "description": "A minimum deposit required to hold this account",
                            "type": "boolean"
                          },
                          "OpeningDepositMinimum": {
                            "description": "Minimum Amount to be held on account",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "OpeningDepositMinimumCurrency": {
                            "description": "The currency of the Minimum Amount to be depositing at opening",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "MinimumOperatingBalanceExists": {
                            "description": "Is there a Minimum Operating Balance?",
                            "type": "boolean"
                          },
                          "MinimumOperatingBalance": {
                            "description": "Minimum Operating Balance",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "MinimumOperatingBalanceCurrency": {
                            "description": "Minimum Operating Balance currency",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "MaximumOpeningAmount": {
                            "description": "A maximum amount to be deposited at opening",
                            "type": "boolean"
                          },
                          "OpeningDepositMaximumAmount": {
                            "description": "Maximum Amount to be depositing at opening",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "OpeningDepositMaximumCurrency": {
                            "description": "The currency of the Minimum Amount to be depositing at opening",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "EligibilityName": {
                            "description": "Free text description, denotes non standard eligibilities not included in the code list",
                            "type": "string"
                          },
                          "EligibilityType": {
                            "description": "Eligibility type",
                            "type": "string",
                            "enum": ["Business Only", "Students Only", "NTB Business", "Credit Scoring", "Sole UK account", "Any business customer", "ID and Verification", "Arrears on Loan, Credit Card, mortgage", "Over Overdraft for more than 30 days", "Sole UK Account or Bankrupt", "UCAS Fulltime for 2 years", "Date Limited (2 months within course start date)", "Email Address", "Sole Student Account"]
                          },
                          "EligibilityNotes": {
                            "description": "Optional additional notes to supplement the eligibility conditions. Only used for very specific conditions",
                            "type": "string"
                          },
                          "PreviousBankruptcy": {
                            "description": "Describes if a previous bankruptcy / insolvency disqualfies for this account Details in ELI-280",
                            "type": "boolean"
                          },
                          "MarketingEligibility": {
                            "type": "array",
                            "items": {
                              "description": "Specific eligibility for marketing",
                              "type": "string",
                              "enum": ["Switchers Only", "New Customers Only"]
                            },
                            "uniqueItems": true
                          }
                        },
                        "required": ["AgeRestricted", "OtherFinancialHoldingRequired", "Description", "IncomeTurnoverRelated", "ResidencyRestricted", "ThirdSectorOrganisations", "PreviousBankruptcy"],
                        "additionalProperties": false
                      },
                      "CreditInterest": {
                        "description": "Credit Interest",
                        "type": "object",
                        "properties": {
                          "CreditCharged": {
                            "description": "Is credit paid to the account. The answer will be the condition of all other fields to be filled",
                            "type": "boolean"
                          },
                          "CreditInterestGroup": {
                            "description": "Credit Interest Group",
                            "type": "object",
                            "properties": {
                              "InterestSubType": {
                                "description": "Describes if the offering is promotional, regular or a description of a future state",
                                "type": "string",
                                "enum": ["Promotional", "Regular", "Future Regular Terms"]
                              },
                              "CreditInterestItem": {
                                "description": "Credit Interest item",
                                "type": "object",
                                "properties": {
                                  "StartPromotionOrFutureTerms": {
                                    "description": "Describes the start date",
                                    "type": "string",
                                    "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                  },
                                  "StopPromotionOrFutureTerms": {
                                    "description": "Describes the end date",
                                    "type": "string",
                                    "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                  },
                                  "LengthPromotionalInDays": {
                                    "description": "Describes the length if only a duration is given instead of a date",
                                    "type": "integer"
                                  },
                                  "DateOfChange": {
                                    "description": "Date of the change if it refers to future terms",
                                    "type": "string",
                                    "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                  },
                                  "StartDate": {
                                    "description": "If interest is charged on a specific date range as start date (often used for promotion)",
                                    "type": "string",
                                    "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                  },
                                  "EndDate": {
                                    "description": "If interest is charged on a specific date range as end date (often used for promotion)",
                                    "type": "string",
                                    "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                  },
                                  "CalculationFrequency": {
                                    "description": "How often is interest applied to account",
                                    "type": "string",
                                    "enum": ["Daily", "Weekly", "Monthly", "Yearly", "University Term", "Flexible"]
                                  },
                                  "PaymentMethod": {
                                    "description": "Credit Interest Payment Method",
                                    "type": "string",
                                    "enum": ["Pay away", "Compound"]
                                  },
                                  "InterestRateType": {
                                    "description": "Credit Interest Payment Rate Type",
                                    "type": "string",
                                    "enum": ["Fixed", "Variable"]
                                  },
                                  "FixedInterestLength": {
                                    "description": "Fixed interest length in days",
                                    "type": "integer"
                                  },
                                  "CalculationMethod": {
                                    "description": "Method for interest calculation",
                                    "type": "string",
                                    "enum": ["Branded", "Tiered"]
                                  },
                                  "InterestTiers": {
                                    "type": "array",
                                    "items": {
                                      "description": "Credit Interest Tiers",
                                      "type": "object",
                                      "properties": {
                                        "InterestTier": {
                                          "description": "Identifier for the tier",
                                          "type": "string"
                                        },
                                        "TierValueMinimum": {
                                          "description": "Lower value of interest tier",
                                          "type": "string",
                                          "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                        },
                                        "DailyChargeForMinimum": {
                                          "description": "Special charge on tiered overdraft",
                                          "type": "string",
                                          "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                        },
                                        "TierValueMaximum": {
                                          "description": "Max Value of interst tier",
                                          "type": "string"
                                        },
                                        "DailyChargeForMaximum": {
                                          "description": "Special charge on tiered overdraft",
                                          "type": "string",
                                          "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                        },
                                        "Rate": {
                                          "description": "Rate being paid by the bank (gross)",
                                          "type": "string",
                                          "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                        },
                                        "RateComparisonType": {
                                          "description": "Rate Comparison Type",
                                          "type": "string",
                                          "enum": ["APR", "AER", "Gross"]
                                        },
                                        "APRAERRate": {
                                          "description": "AER or APR Rate for comparison",
                                          "type": "string",
                                          "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "InterestNotes": {
                                    "description": "Additional notes to supplement the interest details",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "required": ["CreditInterestItem"],
                            "additionalProperties": false
                          }
                        },
                        "required": ["CreditCharged", "CreditInterestGroup"],
                        "additionalProperties": false
                      },
                      "Overdraft": {
                        "type": "array",
                        "items": {
                          "description": "Overdraft",
                          "type": "object",
                          "properties": {
                            "InterestProductSubType": {
                              "description": "Describes if the offering is promotional, regular or a description of a future state",
                              "type": "string",
                              "enum": ["Promotional", "Regular", "Future Regular Terms"]
                            },
                            "StartPromotionOrFutureTerms": {
                              "description": "Describes the start date",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "StopPromotionOrFutureTerms": {
                              "description": "Describes the end date",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "LengthPromotionalInDays": {
                              "description": "Describes the length if only a duration is given instead of a date",
                              "type": "integer"
                            },
                            "DateOfChange": {
                              "description": "Date of the change if it refers to future terms",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "OverdraftPricing": {
                              "description": "Overdraft Pricing",
                              "type": "object",
                              "properties": {
                                "ApplicableTo": {
                                  "description": "Personal Interest Tiers",
                                  "type": "object",
                                  "properties": {
                                    "InterestTierSME": {
                                      "description": "Identifier for tier only where it has been supplied under Part 8 (article 32 or the CMA order), value reflects upper tier value",
                                      "type": "string",
                                      "enum": ["£ 5,000", "£ 10,000", "£ 15,000", "£ 20,000", "£ 25,000"]
                                    },
                                    "InterestTierPersonal": {
                                      "description": "Identifier for the tier",
                                      "type": "string"
                                    }
                                  },
                                  "minProperties": 1,
                                  "maxProperties": 1,
                                  "additionalProperties": false
                                },
                                "Tiers": {
                                  "type": "array",
                                  "items": {
                                    "description": "Tiers",
                                    "type": "object",
                                    "properties": {
                                      "TierType": {
                                        "description": "Tier Type",
                                        "type": "object",
                                        "properties": {
                                          "ArrangedOverdraftInterestTier": {
                                            "description": "Arranged overdraft interest tier",
                                            "type": "integer"
                                          },
                                          "UnarrangedOverdraftInterestTier": {
                                            "description": "Unarranged overdraft interest tier",
                                            "type": "integer"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "TierValueMinimum": {
                                        "description": "Lower value of interest tier",
                                        "type": "integer"
                                      },
                                      "TierValueMaximum": {
                                        "description": "Max Value of interest tier",
                                        "type": "integer"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "minItems": 1
                                },
                                "InterestRateEARpa": {
                                  "description": "Interest rate applied to tier",
                                  "type": "string",
                                  "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                },
                                "RepresentativeRate": {
                                  "description": "Interest rate at AER",
                                  "type": "string",
                                  "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                },
                                "InterestNotes": {
                                  "description": "Optional additional notes to supplement the interest details",
                                  "type": "string"
                                },
                                "TotalOverdraftChargeAmount": {
                                  "description": "All charges that a customer could incur as a result of exceeding or attempting to exceed a Pre-agreed credit limit",
                                  "type": "string",
                                  "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                },
                                "MinUnarrangedOverdraftAmount": {
                                  "description": "Minimum Unarranged Overdraft Amount if applicable",
                                  "type": "string",
                                  "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                },
                                "InterestRate": {
                                  "description": "interest rate applied to tier",
                                  "type": "string",
                                  "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                },
                                "InterestRateCalculationFrequency": {
                                  "description": "Frequency at which interest is calculated and accrued",
                                  "type": "string",
                                  "enum": ["Daily", "Weekly", "Monthly", "Yearly", "University Term", "Flexible"]
                                },
                                "InterestApplicationFrequency": {
                                  "description": "When the interest is applied",
                                  "type": "string",
                                  "enum": ["Daily", "Weekly", "Monthly", "Yearly", "University Term", "Flexible"]
                                },
                                "DailyCharge": {
                                  "description": "Maximum daily overdraft charge",
                                  "type": "string",
                                  "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                },
                                "MonthlyCharge": {
                                  "description": "Maximum monthly overdraft charge",
                                  "type": "string",
                                  "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                },
                                "ItemCharge": {
                                  "description": "Arranged overdraft item charge",
                                  "type": "string",
                                  "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                },
                                "OtherCharge": {
                                  "description": "Other flat charge levied when overdrawn (Arranged)",
                                  "type": "string",
                                  "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                },
                                "OverdraftNotes": {
                                  "description": "Supplementary notes for overdrafts",
                                  "type": "string"
                                },
                                "RatesAreNegotionable": {
                                  "description": "Value that expresses if the rates are negotiable",
                                  "type": "string",
                                  "enum": ["yes", "no", "Condition based"]
                                },
                                "IndicativeRate": {
                                  "description": "Indicative Rate that the client will get",
                                  "type": "string"
                                },
                                "BufferAmount": {
                                  "description": "Amount on overdraft that is prearranged",
                                  "type": "string",
                                  "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                }
                              },
                              "required": ["ApplicableTo", "Tiers"],
                              "additionalProperties": false
                            },
                            "MaximumMonthlyOverdraftCharge": {
                              "description": "Maximum monthly overdraft charge",
                              "type": "string",
                              "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                            },
                            "MaximumDailyOverdraftCharge": {
                              "description": "Maximum daily overdraft charge",
                              "type": "string",
                              "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                            },
                            "OverdraftType": {
                              "description": "Opposite of repayable on demand",
                              "type": "string",
                              "enum": ["On Demand", "Committed"]
                            },
                            "Term": {
                              "description": "The duration of the overdraft, if it is non permanent",
                              "type": "string"
                            },
                            "SetUpFeesAmount": {
                              "description": "Fees to set up the overdraft",
                              "type": "string",
                              "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                            },
                            "SetUpFeesRate": {
                              "description": "Rate to set up the overdraft",
                              "type": "string",
                              "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                            },
                            "ReviewFee": {
                              "description": "Fee to review overdraft limit",
                              "type": "string",
                              "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                            },
                            "MinimumFee": {
                              "description": "Minimum overdraft fee",
                              "type": "string",
                              "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                            },
                            "AnnualRenewalRate": {
                              "description": "Rate to renew overdraft",
                              "type": "string",
                              "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                            },
                            "AnnualRenewalFee": {
                              "description": "Fee payable per term for overdraft",
                              "type": "string",
                              "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                            },
                            "MinimumSetupFee": {
                              "description": "The minimum amount charged for an overdraft set up",
                              "type": "string",
                              "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                            },
                            "RenewalRate": {
                              "description": "Rate to renew overdraft",
                              "type": "string",
                              "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                            },
                            "MinimumRenewalFee": {
                              "description": "The minimum amount charged for the annual renewal",
                              "type": "string",
                              "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "FeesAndCharges": {
                        "type": "array",
                        "items": {
                          "description": "Fees And Charges",
                          "type": "object",
                          "properties": {
                            "ProductSubType": {
                              "description": "Describes if the offering is promotional, regular or a description of a future state",
                              "type": "string",
                              "enum": ["Promotional", "Regular", "Future Regular Terms"]
                            },
                            "Fees": {
                              "description": "Fees",
                              "type": "object",
                              "properties": {
                                "StartPromotionOrFutureTerms": {
                                  "description": "Describes the start date",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "StopPromotionOrFutureTerms": {
                                  "description": "Describes the end date",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "LengthPromotionalInDays": {
                                  "description": "Describes the length if only a duration is given instead of a date",
                                  "type": "integer"
                                },
                                "DateOfChange": {
                                  "description": "Date of the change if it refers to future terms",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "FeeLowerTier": {
                                  "description": "Lower occurrence / range boundary e.g.. For returned cheques this could be 0, which means the first returned cheque fits into this range",
                                  "type": "integer"
                                },
                                "FeeHigherTier": {
                                  "description": "Higher occurrence / range boundary e.g. For returned cheques this could be 10, which means the first 10 returned cheque fits into this range",
                                  "type": "integer"
                                },
                                "FeeDetails": {
                                  "type": "array",
                                  "items": {
                                    "description": "Fee Details",
                                    "type": "object",
                                    "properties": {
                                      "FeeSubType": {
                                        "description": "Describes if the offering is promotional, regular or a description of a future state",
                                        "type": "string",
                                        "enum": ["Promotional", "Regular", "Future Regular Terms"]
                                      },
                                      "FeeDetail": {
                                        "description": "Fee Detail",
                                        "type": "object",
                                        "properties": {
                                          "FeeType": {
                                            "description": "A description of the Fee type",
                                            "type": "string",
                                            "enum": ["Account Fee", "Incoming CHAPS Fee", "Outgoing CHAPS Fee", "Foreign Currency", "Foreign Currency Withdrawal Fee (% of Tx - Min £2 - Max £5)", "Non Sterling Transaction Fee (Cash Withdrawal)", "SEPA Fee", "Stopped Cheque Fee", "Copy of Cheque Fee", "Cheque Transaction Fee", "Manual Debit Fee", "Counter Draft", "Unpaid Transaction Fee", "Special Cheque Presentation", "Court Order Fee", "Bankers Draft Fee", "Statement Copy Fee", "Bankers Reference Fee", "Personalised Card Fee", "Sterling Travellers Cheque (% of Tx - Min £2 - Max £5)", "International Payments Charge", "Other", "Cash payment In", "Cash payment Out", "Daily Monitoring", "Weekly Monitoring", "Monthly Monitoring", "Status Enquiry", "Audit Letter", "Credits paid in via night Safe", "Credit paid In via Depos ATM", "Telepay or Teledebit Item", "Balance Handlng Fee", "Late payment", "Loan arrangement", "Early Repayment charge", "Over credit limit fee", "Return payment fee", "Payment Scheme Exchange Rate", "Payment Scheme Exchange Fee", "Payment Scheme Exchange Fee Rate", "Non-Sterling Transaction fee", "Non-Sterling Transaction fee rate", "Non-Sterling Purchase Fee", "Non-Sterling Purchase Fee rate", "Non-Sterling Cash Fee", "Non-Sterling Cash Fee Rate", "Foreign Purchase Fee", "Foreign Purchase Fee Rate", "Foreign Cash Fee", "Foreign Cash Fee Rate", "Early Repayment Charges", "Tiered arrangement fees", "Monthly Account Maintenance Fee", "UK Sterling Direct Debits", "Standing order", "Business Debit card transaction (excluding ATM)", "ATM withdrawals (from a non-group ATM)", "ATM withdrawals (from a group ATM)", "Internet Bulk Payment - batch", "Automated credit", "Automated credit - Telephone and Internet Banking", "Automated credit –Faster Payments inbound", "Internet Bulk Payment –per item", "Faster Payments outbound", "Transfer to an account outside of the group", "Cheque paid in (or Postal Order)", "Cheques Out", "Cash paid in", "Cash paid out at own counter", "Other debit", "Other credit", "Credit paid in at another bank", "Cash exchanged", "Bacs – batch file submitted", "Bacs – debit or credit item", "Cardnet envelope paid in", "Credit paid in via Night Safe - up to £5K", "International payment Internet banking", "Express International Moneymover Branch", "Standard International Moneymover Branch", "Non-urgent Euro (SEPA)1 Branch", "International draft payable abroad Branch", "Electronic payments received from abroad Up to £100", "Electronic payments received from abroad over £100", "Foreign cheque/draft", "Cheques/drafts (including dividend warrants) payable in foreign currency or Sterling drawn abroad", "Cheques/drafts (including dividend warrants) payable in foreign currency drawn in the UK", "Unpaid charge (if the cheque/draft is not honoured by the paying bank)", "Status enquiries abroad", "Status enquiries abroad (if sent electronically) additional", "After an international payment has been sent abroad - Beneficiary claiming non-receipt of funds (BCNR) ", "After an international payment has been sent abroad - Recalling a payment", "First legal mortgage over a property, such as business premises", "Second or subsequent legal mortgage over a property, such as a house or business premises", "Unpaid Item", "SMS Text alerts", "SME unsecured loan fee", "World Currency Withdrawal Fee", "World Currency Purchase Fee", "Europe Currently Withdrawal Fee", "Europe Purchase Fee", "Minimum Foreign Cash Withdrawal Fee", "Maximum Foreign Cash Withdrawal Fee", "Security Fee", "Early Redemption Charge", "Paid Referral Fee", "Unpaid Referral Fee"]
                                          },
                                          "Other": {
                                            "description": "Describe other fee type",
                                            "type": "string"
                                          },
                                          "StartPromotionOrFutureTerms": {
                                            "description": "Describes the start date",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "StopPromotionOrFutureTerms": {
                                            "description": "Describes the end date",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "LengthPromotionalInDays": {
                                            "description": "Describes the length if only a duration is given instead of a date",
                                            "type": "integer"
                                          },
                                          "DateOfChange": {
                                            "description": "Date of the change if it refers to future terms",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "FeeSubDetails": {
                                            "description": "Fee Sub Details",
                                            "type": "object",
                                            "properties": {
                                              "FeeFrequency": {
                                                "description": "Triggering frequency of the fee",
                                                "type": "string",
                                                "enum": ["Monthly", "Per Transaction - Amount", "Per Transaction - Percentage", "Per Occurrence", "Daily", "5 consecutive business days", "Weekly", "Statement Monthly", "Quarterly", "6 monthly", "Yearly", "On account anniversary", "Charging period", "Item", "Account opening", "Account Closing", "Academic Term", "One time payment at the start of the loan", "At the time of repayment", "per hour", "per sheet"]
                                              },
                                              "FeeAmount": {
                                                "description": "Fee in GBP",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                              },
                                              "FeeRate": {
                                                "description": "% Rate",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                              },
                                              "Negotiable": {
                                                "description": "Indicates that this Fee Rate or Fee Amount is negotiable based on risk or other factor",
                                                "type": "boolean"
                                              },
                                              "RepresentativeRate": {
                                                "description": "Representative Rate",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                              },
                                              "FeeLowerTier": {
                                                "description": "Lower occurrence / range boundary e.g. For returned cheques this could be 0, which means the first returned cheque fits into this range",
                                                "type": "integer"
                                              },
                                              "FeeHigherTier": {
                                                "description": "Higher occurrence / range boundary e.g. For returned cheques this could be 10, which means the first 10 returned cheque fits into this range",
                                                "type": "integer"
                                              },
                                              "FeesAndChargesNotes": {
                                                "description": "Supplementary information for fees and charges",
                                                "type": "string"
                                              }
                                            },
                                            "required": ["FeeFrequency", "FeeAmount", "Negotiable"],
                                            "additionalProperties": false
                                          }
                                        },
                                        "required": ["FeeType", "FeeSubDetails"],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": ["FeeSubType", "FeeDetail"],
                                    "additionalProperties": false
                                  },
                                  "minItems": 1
                                }
                              },
                              "required": ["FeeDetails"],
                              "additionalProperties": false
                            }
                          },
                          "required": ["ProductSubType", "Fees"],
                          "additionalProperties": false
                        },
                        "minItems": 1
                      },
                      "Benefits": {
                        "description": "Benefit",
                        "type": "object",
                        "properties": {
                          "Benefit": {
                            "description": "Describe  one or more benefits if they exist",
                            "type": "boolean"
                          },
                          "BenefitGroup": {
                            "type": "array",
                            "items": {
                              "description": "Benefit Interest Group",
                              "type": "object",
                              "properties": {
                                "BenefitSubType": {
                                  "description": "Describes if the offering is promotional, regular or a description of a future state",
                                  "type": "string",
                                  "enum": ["Promotional", "Regular", "Future Regular Terms"]
                                },
                                "BenefitItem": {
                                  "description": "Benefit Item",
                                  "type": "object",
                                  "properties": {
                                    "StartPromotionOrFutureTerms": {
                                      "description": "Describes the start date",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "StopPromotionOrFutureTerms": {
                                      "description": "Describes the end date",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "LengthPromotionalInDays": {
                                      "description": "Describes the length if only a duration is given instead of a date in days",
                                      "type": "integer"
                                    },
                                    "DateOfChange": {
                                      "description": "Date of the change if it refers to future terms",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "BenefitDetail": {
                                      "type": "array",
                                      "items": {
                                        "description": "Benefit detail",
                                        "type": "object",
                                        "properties": {
                                          "BenefitType": {
                                            "description": "Type that represents the nature of the benefit",
                                            "type": "string"
                                          },
                                          "BenefitName": {
                                            "description": "The name of the benefit",
                                            "type": "string"
                                          },
                                          "BenefitValue": {
                                            "description": "The value or values permissible for a specific benefit for an individual product representing a product characteristic",
                                            "type": "string"
                                          },
                                          "DefaultToAccounts": {
                                            "description": "Is the benefit part of the default account",
                                            "type": "boolean"
                                          },
                                          "BenefitID": {
                                            "description": "Unique benefit identifier per organisation",
                                            "type": "string"
                                          },
                                          "CriteriaType": {
                                            "type": "array",
                                            "items": {
                                              "description": "Criteria that is required in order to be eligible for the Benefit",
                                              "type": "string",
                                              "enum": ["Deposit", "Direct Debit", "Other"]
                                            }
                                          },
                                          "MinimumCriteria": {
                                            "description": "Minimum amount for the criteria",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                          },
                                          "MaximumCriteria": {
                                            "description": "Maximum amount for the criteria",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                          },
                                          "Counter": {
                                            "description": "Counter for the criteria (e.g. number of DD)",
                                            "type": "integer"
                                          },
                                          "BenefitDescription": {
                                            "description": "A textual explanation of what the benefit is",
                                            "type": "string"
                                          },
                                          "PromotionStartDate": {
                                            "description": "If the benefit is temporal the start date is when the benefit comes into effect",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "PromotionEndDate": {
                                            "description": "If the benefit is temporal the end date is when the benefit is no longer applicable",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "required": ["BenefitItem"],
                              "additionalProperties": false
                            }
                          }
                        },
                        "required": ["Benefit"],
                        "additionalProperties": false
                      }
                    },
                    "required": ["Organisation", "ProductType", "ProductSegment", "InternationalPaymentsSupported", "ProductIdentifier", "CardWithdrawalLimit", "ProductDescription", "TsandCs", "AccessChannels", "CardType", "Contactless", "ChequeBookAvailable", "CreditScoringPartOfAccountOpeningForGettingAnAccount", "ProductURL", "Currency", "OverdraftOffered", "CAPricing", "Eligibility", "CreditInterest", "FeesAndCharges", "Benefits"]
                  }
                }
              },
              "required": ["meta", "data"],
              "additionalProperties": false
            }
          },
          "400": {
            "description": "You have sent a request which could not be understood.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "400 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["400"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Bad request"]
                },
                "description": {
                  "type": "string",
                  "enum": ["You have sent a request which could not be understood."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "408": {
            "description": "Your client has failed to submit a request, and a timeout has occurred.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "408 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["408"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Client timeout"]
                },
                "description": {
                  "type": "string",
                  "enum": ["Your client has failed to submit a request, and a timeout has occurred."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "429": {
            "description": "You have requested this resource too often. Slow down.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "429 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["429"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Too many requests"]
                },
                "description": {
                  "type": "string",
                  "enum": ["You have requested this resource too often. Slow down."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "500": {
            "description": "An error occurred on the server. No further information is available.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "500 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["500"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Internal server error"]
                },
                "description": {
                  "type": "string",
                  "enum": ["An error occurred on the server. No further information is available."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "503 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["503"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Service temporarily unavailable"]
                },
                "description": {
                  "type": "string",
                  "enum": ["The service is temporarily unavailable."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "default": {
            "description": "A standard error response.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "Error object",
              "type": "object",
              "properties": {
                "status": {
                  "description": "This corresponds to the HTTP status code",
                  "type": "string"
                },
                "title": {
                  "description": "A short title of the type of error",
                  "type": "string"
                },
                "description": {
                  "description": "Further details describing the error",
                  "type": "string"
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          }
        }
      },
      "head": {
        "tags": ["PCA"],
        "description": "Gets header information on the current set of `Personal Current Account` data",
        "parameters": [{
          "name": "If-Modified-Since",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if modified since a given date",
          "in": "header",
          "required": false
        }, {
          "name": "If-None-Match",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "in": "header",
          "required": false
        }],
        "responses": {
          "default": {
            "description": "No response",
            "schema": {
              "title": "No response",
              "type": "object",
              "properties": {}
            }
          }
        }
      }
    },
    "/business-current-accounts": {
      "get": {
        "tags": ["BCA"],
        "description": "Gets a list of all `Branch Current Account` objects.",
        "parameters": [{
          "name": "If-Modified-Since",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if modified since a given date",
          "in": "header",
          "required": false
        }, {
          "name": "If-None-Match",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "in": "header",
          "required": false
        }],
        "responses": {
          "200": {
            "description": "Successful response with a list of `Branch Current Account` data",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header",
                "default": "max-age=31536000"
              },
              "Etag": {
                "type": "string",
                "description": "A unique ID identifying whether this resource has changed"
              },
              "Cache-Control": {
                "type": "string",
                "description": "Describes how long this response can be cached",
                "default": "max-age=28800"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "title": "Meta data",
                  "type": "object",
                  "properties": {
                    "LastUpdated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "TotalResults": {
                      "type": "integer"
                    },
                    "Agreement": {
                      "type": "string",
                      "enum": ["Use of the APIs and any related data will be subject to the terms of the Open Licence and subject to terms and conditions"]
                    },
                    "License": {
                      "description": "Change Banking License",
                      "type": "string",
                      "format": "uri",
                      "enum": ["http://www.changebanking.uk/Open-Licence"]
                    },
                    "TermsOfUse": {
                      "description": "Change Banking Terms of Use",
                      "type": "string",
                      "format": "uri",
                      "enum": ["http://www.changebanking.uk/API-Terms"]
                    }
                  },
                  "required": ["LastUpdated", "TotalResults", "Agreement", "License", "TermsOfUse"],
                  "additionalProperties": false
                },
                "data": {
                  "type": "array",
                  "items": {
                    "title": "Business current account",
                    "description": "Business current account",
                    "type": "object",
                    "properties": {
                      "Organisation": {
                        "description": "Organisation",
                        "type": "object",
                        "properties": {
                          "ParentGroupName": {
                            "description": "Parent company that owns or partially owns subsidiary organisations",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 350
                          },
                          "ParentGroupID": {
                            "description": "Unique and unambiguous identification of a financial institution, as assigned under an internationally recognised or proprietary identification scheme",
                            "type": "string",
                            "pattern": "[A-Z]{6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3})?"
                          },
                          "BrandName": {
                            "description": "Name or image that links products provided by a single provider together for the purpose of providing a common identity for marketing and other purposes.",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 35
                          },
                          "BrandID": {
                            "description": "Unique and unambiguous way to identify the brand",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 35
                          }
                        },
                        "required": ["ParentGroupName", "ParentGroupID", "BrandName", "BrandID"],
                        "additionalProperties": false
                      },
                      "ProductType": {
                        "description": "Descriptive code for the product category",
                        "type": "string",
                        "enum": ["BCA"]
                      },
                      "ProductName": {
                        "description": "The name of the product used for marketing purposes from a customer perspective. i.e. what the customer would recognise",
                        "type": "string"
                      },
                      "ProductSegment": {
                        "type": "array",
                        "items": {
                          "description": "Marketing or industry segment that the product is designed for",
                          "type": "string",
                          "enum": ["Student", "Graduate", "Child", "Package", "Basic", "General", "Business", "Youth"]
                        },
                        "minItems": 1
                      },
                      "InternationalPaymentsSupported": {
                        "description": "Indicates that the account supports international payments",
                        "type": "boolean"
                      },
                      "ProductIdentifier": {
                        "description": "Identifier within the parent organisation for the product. Must be unique in the organisation",
                        "type": "string"
                      },
                      "CardWithdrawalLimit": {
                        "description": "The daily Limit that a customer can get via the ATM. This describes the default limit rather than the maximum",
                        "type": "string",
                        "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                      },
                      "ProductDescription": {
                        "description": "Description of the product provided by the parent organisation",
                        "type": "string"
                      },
                      "TsandCs": {
                        "description": "URL provided by the parent organisation which redirects to the current T&Cs",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1
                      },
                      "AccessChannels": {
                        "description": "Ways to interact with the bank when managing account",
                        "type": "array",
                        "items": {
                          "description": "Channel",
                          "type": "string",
                          "enum": ["Branch", "Post", "Internet", "Phone", "Smartphone", "Text", "Call centre"]
                        },
                        "minItems": 1
                      },
                      "CardType": {
                        "description": "Card Type available",
                        "type": "array",
                        "items": {
                          "description": "Indicates the card scheme",
                          "type": "string",
                          "enum": ["Debit Visa", "Debit Mastercard", "Cashcard"]
                        },
                        "minItems": 1
                      },
                      "Contactless": {
                        "description": "Does the card issued have contactless facility",
                        "type": "boolean"
                      },
                      "MobileWallet": {
                        "description": "Mobile wallet supported by this product. A mobile wallet being any electronic device that allows an individual to make electronic commerce transactions",
                        "type": "array",
                        "items": {
                          "description": "Mobile wallet supported by this product. A mobile wallet being any electronic device that allows an individual to make electronic commerce transactions",
                          "type": "string",
                          "enum": ["Apple Pay", "Android Pay", "Samsung Pay", "Vodafone Wallet", "Issuer Mobile App"]
                        }
                      },
                      "CardNotes": {
                        "description": "Optional additional notes to supplement the card details",
                        "type": "string"
                      },
                      "ChequeBookAvailable": {
                        "description": "Can a chequebook be issued",
                        "type": "boolean"
                      },
                      "CreditScoringPartOfAccountOpeningForGettingAnAccount": {
                        "description": "Indicates whether a credit check performed on an inquiry to open an account is submitted",
                        "type": "boolean"
                      },
                      "CreditScoringPartOfAccountOpeningIsAHardOrSoftCreditScore": {
                        "description": "Describes the type of credit scoring",
                        "type": "array",
                        "items": {
                          "description": "Indicates the type of scoring",
                          "type": "string",
                          "enum": ["Hard", "Soft"]
                        }
                      },
                      "CreditScoringPartOfAccountOpeningText": {
                        "description": "Details on the specific credit scoring",
                        "type": "string"
                      },
                      "CreditScoringPartOfAccountOpeningForIDVerification": {
                        "description": "Indicates whether a credit check is used to check the address of a potential new account holder",
                        "type": "boolean"
                      },
                      "CreditScoringPartOfAccountOpeningIDVerificationIsAHardOrSoftCreditScore": {
                        "type": "array",
                        "items": {
                          "description": "Indicates the type of scoring",
                          "type": "string",
                          "enum": ["Hard", "Soft"]
                        }
                      },
                      "CreditScoringPartOfAccountOpeningIDVerificationText": {
                        "description": "Details on the specific credit scoring",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "MonthlyMaximumCharge": {
                        "description": "The maximum Relevant Charges that could accrue in relation to that PCA in any month as a result of exceeding or attempting to exceed a Pre-agreed credit limit on the PCA. i.e. it does not include any charges that are applied through the normal operation of the account such as overdraft interest charges whilst within an agreed limit",
                        "type": "string",
                        "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                      },
                      "ProductURL": {
                        "description": "URL provided by the organisation which redirects to the product (on live products only). There might be more than one product at a given URL",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uri"
                        },
                        "minItems": 1
                      },
                      "Currency": {
                        "description": "Currency of the Account. Default to GBP at present",
                        "type": "array",
                        "items": {
                          "description": "Active or Historic Currency Code",
                          "type": "string",
                          "pattern": "[A-Z]{3}"
                        },
                        "minItems": 1
                      },
                      "OverdraftOffered": {
                        "description": "Indicates whether an overdraft offered for this account",
                        "type": "boolean"
                      },
                      "Feature": {
                        "type": "array",
                        "items": {
                          "description": "Account Features",
                          "type": "object",
                          "properties": {
                            "ExistingFeature": {
                              "description": "Indicates whether the account has any feature",
                              "type": "boolean"
                            },
                            "ProductSubType": {
                              "description": "Describes if the offering is promotional, regular or a description of a future state",
                              "type": "string",
                              "enum": ["Promotional", "Regular", "Future Regular Terms"]
                            },
                            "StartPromotionOrFutureTerms": {
                              "description": "Describes the start date",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "StopPromotionOrFutureTerms": {
                              "description": "Describes the end date",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "LengthPromotionalInDays": {
                              "description": "Describes the length if only a duration is given instead of a date",
                              "type": "integer"
                            },
                            "DateOfChange": {
                              "description": "Date of the change if it refers to future terms",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "FeatureDetails": {
                              "description": "Feature details",
                              "type": "array",
                              "items": {
                                "description": "Feature Details",
                                "type": "object",
                                "properties": {
                                  "FeatureSubType": {
                                    "description": "Describes if the offering is promotional, regular or a description of a future state",
                                    "type": "string",
                                    "enum": ["Promotional", "Regular", "Future Regular Terms"]
                                  },
                                  "StartPromotionOrFutureTerms": {
                                    "description": "Describes the start date",
                                    "type": "string",
                                    "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                  },
                                  "StopPromotionOrFutureTerms": {
                                    "description": "Describes the end date",
                                    "type": "string",
                                    "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                  },
                                  "LengthPromotionalInDays": {
                                    "description": "Describes the length if only a duration is given instead of a date",
                                    "type": "integer"
                                  },
                                  "DateOfChange": {
                                    "description": "Date of the change if it refers to future terms",
                                    "type": "string",
                                    "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                  },
                                  "FeatureType": {
                                    "description": "Type that represents the nature of the feature",
                                    "type": "string"
                                  },
                                  "FeatureName": {
                                    "description": "The name of the feature",
                                    "type": "string"
                                  },
                                  "FeatureDescription": {
                                    "description": "A textual explanation of what the feature",
                                    "type": "string"
                                  },
                                  "FeatureValue": {
                                    "description": "The value or values permissible for a specific feature for an individual product representing a product characteristic",
                                    "type": "string"
                                  },
                                  "CriteriaType": {
                                    "description": "Criteria that is required in order to be eligible for the feature",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": ["ExistingFeature"]
                        }
                      },
                      "CAPricing": {
                        "type": "array",
                        "items": {
                          "description": "Card Price",
                          "type": "object",
                          "properties": {
                            "ProductSubType": {
                              "description": "Describes if the offering is promotional, regular or a description of a future state",
                              "type": "string",
                              "enum": ["Promotional", "Regular", "Future Regular Terms"]
                            },
                            "CAPricingItem": {
                              "description": "Card Pricing",
                              "type": "object",
                              "properties": {
                                "StartPromotionOrFutureTerms": {
                                  "description": "Describes the start date",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "StopPromotionOrFutureTerms": {
                                  "description": "Describes the end date",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "LengthPromotionalInDays": {
                                  "description": "Describes the length if only a duration is given instead of a date",
                                  "type": "integer"
                                },
                                "DateOfChange": {
                                  "description": "Date of the change if it refers to future terms",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "ExchangeRateAdjustment": {
                                  "description": "The margin added, by certain card issuers, to the scheme rate in order to arrive at the exchange rate qouted as the reference exchange rate to the cardholder",
                                  "type": "string",
                                  "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "required": ["ProductSubType", "CAPricingItem"],
                          "additionalProperties": false
                        },
                        "minItems": 1
                      },
                      "Eligibility": {
                        "description": "Eligibility",
                        "type": "object",
                        "properties": {
                          "AgeRestricted": {
                            "description": "Indicates a customer's age is part of eligibility criteria",
                            "type": "boolean"
                          },
                          "MinimumAge": {
                            "description": "Minimum age, in years, required to hold an account",
                            "type": "integer"
                          },
                          "MaximumAge": {
                            "description": "Maximum age, in years, allowed to hold the account",
                            "type": "integer"
                          },
                          "MaximumAgeToOpen": {
                            "description": "Maximum age, in years, to open an account",
                            "type": "integer"
                          },
                          "OtherFinancialHoldingRequired": {
                            "description": "Indicates that it is necessary to hold another product with the bank in order to be eligible for this product or feature",
                            "type": "boolean"
                          },
                          "Description": {
                            "description": "One paragraph detailing the eligibility",
                            "type": "string"
                          },
                          "IncomeTurnoverRelated": {
                            "description": "Indicates if eligibility linked to income",
                            "type": "boolean"
                          },
                          "SingleJointIncome": {
                            "description": "Minimum Income Source. For certain products a minimum income is required. This can be mandated as to the single income or to a joint income. This field describes this",
                            "type": "string",
                            "enum": ["Single Income", "Joint Income", "Single or Joint Income"]
                          },
                          "MinimumIncomeTurnoverAmount": {
                            "description": "Minimum income / Turnover required to hold the product",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "MinimumIncomeTurnoverCurrency": {
                            "description": "Minimum income / Turnover Currency",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "IncomeCondition": {
                            "description": "Stipulates any particular definition of income that applies to the income eligibility and/or method by which income must paid into the account (eg Salary DD)",
                            "type": "string"
                          },
                          "MinIncomeTurnoverPaidIntoAccount": {
                            "description": "Minimum Income Amount required to paid into the account",
                            "type": "integer"
                          },
                          "MinimumIncomeFrequency": {
                            "description": "The frequency that the minimum mentioned before is deposited in the account. Yearly is very important for premium accounts",
                            "type": "string",
                            "enum": ["Daily", "Weekly", "Monthly", "Yearly", "University Term", "Flexible"]
                          },
                          "AnnualBusinessTurnover": {
                            "description": "Annual Business Turnover",
                            "type": "integer"
                          },
                          "AnnualBusinessTurnoverCurrency": {
                            "description": "Annual Business Turnover Currency",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "ResidencyRestricted": {
                            "description": "Indicates a customer's residency forms part of the eligibility criteria",
                            "type": "boolean"
                          },
                          "ResidencyRestrictedRegion": {
                            "description": "Indicates a customer must be current resident of a geographic area/country",
                            "type": "string",
                            "enum": ["UK", "EEA", "EU", "EFTA", "GB - ENG", "GB - NIR", "GB - SCT", "GB - WLS", "IRL"]
                          },
                          "MaxNumberOfAccounts": {
                            "description": "Maximum number of the same prodcut the customer may hold",
                            "type": "string"
                          },
                          "ThirdSectorOrganisations": {
                            "description": "Is the product available to operate as a Clubs or Societies account?",
                            "type": "boolean"
                          },
                          "MinimumDeposit": {
                            "description": "A minimum deposit required to hold this account",
                            "type": "boolean"
                          },
                          "OpeningDepositMinimum": {
                            "description": "Minimum Amount to be held on account",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "OpeningDepositMinimumCurrency": {
                            "description": "The currency of the Minimum Amount to be depositing at opening",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "MinimumOperatingBalanceExists": {
                            "description": "Is there a Minimum Operating Balance?",
                            "type": "boolean"
                          },
                          "MinimumOperatingBalance": {
                            "description": "Minimum Operating Balance",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "MinimumOperatingBalanceCurrency": {
                            "description": "Minimum Operating Balance currency",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "MaximumOpeningAmount": {
                            "description": "A maximum amount to be deposited at opening",
                            "type": "boolean"
                          },
                          "OpeningDepositMaximumAmount": {
                            "description": "Maximum Amount to be depositing at opening",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "OpeningDepositMaximumCurrency": {
                            "description": "The currency of the Minimum Amount to be depositing at opening",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "EligibilityName": {
                            "description": "Free text description, denotes non standard eligibilities not included in the code list",
                            "type": "string"
                          },
                          "EligibilityType": {
                            "description": "Eligibility type",
                            "type": "string",
                            "enum": ["Business Only", "Students Only", "NTB Business", "Credit Scoring", "Sole UK account", "Any business customer", "ID and Verification", "Arrears on Loan, Credit Card, mortgage", "Over Overdraft for more than 30 days", "Sole UK Account or Bankrupt", "UCAS Fulltime for 2 years", "Date Limited (2 months within course start date)", "Email Address", "Sole Student Account"]
                          },
                          "EligibilityNotes": {
                            "description": "Optional additional notes to supplement the eligibility conditions. Only used for very specific conditions",
                            "type": "string"
                          },
                          "PreviousBankruptcy": {
                            "description": "Describes if a previous bankruptcy / insolvency disqualfies for this account Details in ELI-280",
                            "type": "boolean"
                          },
                          "MarketingEligibility": {
                            "type": "array",
                            "items": {
                              "description": "Specific eligibility for marketing",
                              "type": "string",
                              "enum": ["Switchers Only", "New Customers Only"]
                            },
                            "uniqueItems": true
                          }
                        },
                        "required": ["AgeRestricted", "OtherFinancialHoldingRequired", "Description", "IncomeTurnoverRelated", "ResidencyRestricted", "ThirdSectorOrganisations", "PreviousBankruptcy"],
                        "additionalProperties": false
                      },
                      "CreditInterest": {
                        "description": "Credit Interest",
                        "type": "object",
                        "properties": {
                          "CreditCharged": {
                            "description": "Is credit paid to the account. The answer will be the condition of all other fields to be filled",
                            "type": "boolean"
                          },
                          "CreditInterestGroup": {
                            "description": "Credit Interest Group",
                            "type": "object",
                            "properties": {
                              "InterestSubType": {
                                "description": "Describes if the offering is promotional, regular or a description of a future state",
                                "type": "string",
                                "enum": ["Promotional", "Regular", "Future Regular Terms"]
                              },
                              "CreditInterestItem": {
                                "description": "Credit Interest item",
                                "type": "object",
                                "properties": {
                                  "StartPromotionOrFutureTerms": {
                                    "description": "Describes the start date",
                                    "type": "string",
                                    "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                  },
                                  "StopPromotionOrFutureTerms": {
                                    "description": "Describes the end date",
                                    "type": "string",
                                    "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                  },
                                  "LengthPromotionalInDays": {
                                    "description": "Describes the length if only a duration is given instead of a date",
                                    "type": "integer"
                                  },
                                  "DateOfChange": {
                                    "description": "Date of the change if it refers to future terms",
                                    "type": "string",
                                    "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                  },
                                  "StartDate": {
                                    "description": "If interest is charged on a specific date range as start date (often used for promotion)",
                                    "type": "string",
                                    "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                  },
                                  "EndDate": {
                                    "description": "If interest is charged on a specific date range as end date (often used for promotion)",
                                    "type": "string",
                                    "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                  },
                                  "CalculationFrequency": {
                                    "description": "How often is interest applied to account",
                                    "type": "string",
                                    "enum": ["Daily", "Weekly", "Monthly", "Yearly", "University Term", "Flexible"]
                                  },
                                  "PaymentMethod": {
                                    "description": "Credit Interest Payment Method",
                                    "type": "string",
                                    "enum": ["Pay away", "Compound"]
                                  },
                                  "InterestRateType": {
                                    "description": "Credit Interest Payment Rate Type",
                                    "type": "string",
                                    "enum": ["Fixed", "Variable"]
                                  },
                                  "FixedInterestLength": {
                                    "description": "Fixed interest length in days",
                                    "type": "integer"
                                  },
                                  "CalculationMethod": {
                                    "description": "Method for interest calculation",
                                    "type": "string",
                                    "enum": ["Branded", "Tiered"]
                                  },
                                  "InterestTiers": {
                                    "type": "array",
                                    "items": {
                                      "description": "Credit Interest Tiers",
                                      "type": "object",
                                      "properties": {
                                        "InterestTier": {
                                          "description": "Identifier for the tier",
                                          "type": "string"
                                        },
                                        "TierValueMinimum": {
                                          "description": "Lower value of interest tier",
                                          "type": "string",
                                          "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                        },
                                        "DailyChargeForMinimum": {
                                          "description": "Special charge on tiered overdraft",
                                          "type": "string",
                                          "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                        },
                                        "TierValueMaximum": {
                                          "description": "Max Value of interst tier",
                                          "type": "string"
                                        },
                                        "DailyChargeForMaximum": {
                                          "description": "Special charge on tiered overdraft",
                                          "type": "string",
                                          "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                        },
                                        "Rate": {
                                          "description": "Rate being paid by the bank (gross)",
                                          "type": "string",
                                          "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                        },
                                        "RateComparisonType": {
                                          "description": "Rate Comparison Type",
                                          "type": "string",
                                          "enum": ["APR", "AER", "Gross"]
                                        },
                                        "APRAERRate": {
                                          "description": "AER or APR Rate for comparison",
                                          "type": "string",
                                          "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "InterestNotes": {
                                    "description": "Additional notes to supplement the interest details",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "required": ["CreditInterestItem"],
                            "additionalProperties": false
                          }
                        },
                        "required": ["CreditCharged", "CreditInterestGroup"],
                        "additionalProperties": false
                      },
                      "Overdraft": {
                        "type": "array",
                        "items": {
                          "description": "Overdraft",
                          "type": "object",
                          "properties": {
                            "InterestProductSubType": {
                              "description": "Describes if the offering is promotional, regular or a description of a future state",
                              "type": "string",
                              "enum": ["Promotional", "Regular", "Future Regular Terms"]
                            },
                            "StartPromotionOrFutureTerms": {
                              "description": "Describes the start date",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "StopPromotionOrFutureTerms": {
                              "description": "Describes the end date",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "LengthPromotionalInDays": {
                              "description": "Describes the length if only a duration is given instead of a date",
                              "type": "integer"
                            },
                            "DateOfChange": {
                              "description": "Date of the change if it refers to future terms",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "OverdraftPricing": {
                              "description": "Overdraft Pricing",
                              "type": "object",
                              "properties": {
                                "ApplicableTo": {
                                  "description": "Personal Interest Tiers",
                                  "type": "object",
                                  "properties": {
                                    "InterestTierSME": {
                                      "description": "Identifier for tier only where it has been supplied under Part 8 (article 32 or the CMA order), value reflects upper tier value",
                                      "type": "string",
                                      "enum": ["£ 5,000", "£ 10,000", "£ 15,000", "£ 20,000", "£ 25,000"]
                                    },
                                    "InterestTierPersonal": {
                                      "description": "Identifier for the tier",
                                      "type": "string"
                                    }
                                  },
                                  "minProperties": 1,
                                  "maxProperties": 1,
                                  "additionalProperties": false
                                },
                                "Tiers": {
                                  "type": "array",
                                  "items": {
                                    "description": "Tiers",
                                    "type": "object",
                                    "properties": {
                                      "TierType": {
                                        "description": "Tier Type",
                                        "type": "object",
                                        "properties": {
                                          "ArrangedOverdraftInterestTier": {
                                            "description": "Arranged overdraft interest tier",
                                            "type": "integer"
                                          },
                                          "UnarrangedOverdraftInterestTier": {
                                            "description": "Unarranged overdraft interest tier",
                                            "type": "integer"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "TierValueMinimum": {
                                        "description": "Lower value of interest tier",
                                        "type": "integer"
                                      },
                                      "TierValueMaximum": {
                                        "description": "Max Value of interest tier",
                                        "type": "integer"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "minItems": 1
                                },
                                "InterestRateEARpa": {
                                  "description": "Interest rate applied to tier",
                                  "type": "string",
                                  "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                },
                                "RepresentativeRate": {
                                  "description": "Interest rate at AER",
                                  "type": "string",
                                  "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                },
                                "InterestNotes": {
                                  "description": "Optional additional notes to supplement the interest details",
                                  "type": "string"
                                },
                                "TotalOverdraftChargeAmount": {
                                  "description": "All charges that a customer could incur as a result of exceeding or attempting to exceed a Pre-agreed credit limit",
                                  "type": "string",
                                  "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                },
                                "MinUnarrangedOverdraftAmount": {
                                  "description": "Minimum Unarranged Overdraft Amount if applicable",
                                  "type": "string",
                                  "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                },
                                "InterestRate": {
                                  "description": "interest rate applied to tier",
                                  "type": "string",
                                  "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                },
                                "InterestRateCalculationFrequency": {
                                  "description": "Frequency at which interest is calculated and accrued",
                                  "type": "string",
                                  "enum": ["Daily", "Weekly", "Monthly", "Yearly", "University Term", "Flexible"]
                                },
                                "InterestApplicationFrequency": {
                                  "description": "When the interest is applied",
                                  "type": "string",
                                  "enum": ["Daily", "Weekly", "Monthly", "Yearly", "University Term", "Flexible"]
                                },
                                "DailyCharge": {
                                  "description": "Maximum daily overdraft charge",
                                  "type": "string",
                                  "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                },
                                "MonthlyCharge": {
                                  "description": "Maximum monthly overdraft charge",
                                  "type": "string",
                                  "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                },
                                "ItemCharge": {
                                  "description": "Arranged overdraft item charge",
                                  "type": "string",
                                  "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                },
                                "OtherCharge": {
                                  "description": "Other flat charge levied when overdrawn (Arranged)",
                                  "type": "string",
                                  "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                },
                                "OverdraftNotes": {
                                  "description": "Supplementary notes for overdrafts",
                                  "type": "string"
                                },
                                "RatesAreNegotionable": {
                                  "description": "Value that expresses if the rates are negotiable",
                                  "type": "string",
                                  "enum": ["yes", "no", "Condition based"]
                                },
                                "IndicativeRate": {
                                  "description": "Indicative Rate that the client will get",
                                  "type": "string"
                                },
                                "BufferAmount": {
                                  "description": "Amount on overdraft that is prearranged",
                                  "type": "string",
                                  "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                }
                              },
                              "required": ["ApplicableTo", "Tiers"],
                              "additionalProperties": false
                            },
                            "MaximumMonthlyOverdraftCharge": {
                              "description": "Maximum monthly overdraft charge",
                              "type": "string",
                              "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                            },
                            "MaximumDailyOverdraftCharge": {
                              "description": "Maximum daily overdraft charge",
                              "type": "string",
                              "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                            },
                            "OverdraftType": {
                              "description": "Opposite of repayable on demand",
                              "type": "string",
                              "enum": ["On Demand", "Committed"]
                            },
                            "Term": {
                              "description": "The duration of the overdraft, if it is non permanent",
                              "type": "string"
                            },
                            "SetUpFeesAmount": {
                              "description": "Fees to set up the overdraft",
                              "type": "string",
                              "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                            },
                            "SetUpFeesRate": {
                              "description": "Rate to set up the overdraft",
                              "type": "string",
                              "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                            },
                            "ReviewFee": {
                              "description": "Fee to review overdraft limit",
                              "type": "string",
                              "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                            },
                            "MinimumFee": {
                              "description": "Minimum overdraft fee",
                              "type": "string",
                              "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                            },
                            "AnnualRenewalRate": {
                              "description": "Rate to renew overdraft",
                              "type": "string",
                              "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                            },
                            "AnnualRenewalFee": {
                              "description": "Fee payable per term for overdraft",
                              "type": "string",
                              "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                            },
                            "MinimumSetupFee": {
                              "description": "The minimum amount charged for an overdraft set up",
                              "type": "string",
                              "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                            },
                            "RenewalRate": {
                              "description": "Rate to renew overdraft",
                              "type": "string",
                              "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                            },
                            "MinimumRenewalFee": {
                              "description": "The minimum amount charged for the annual renewal",
                              "type": "string",
                              "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "FeesAndCharges": {
                        "type": "array",
                        "items": {
                          "description": "Fees And Charges",
                          "type": "object",
                          "properties": {
                            "ProductSubType": {
                              "description": "Describes if the offering is promotional, regular or a description of a future state",
                              "type": "string",
                              "enum": ["Promotional", "Regular", "Future Regular Terms"]
                            },
                            "Fees": {
                              "description": "Fees",
                              "type": "object",
                              "properties": {
                                "StartPromotionOrFutureTerms": {
                                  "description": "Describes the start date",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "StopPromotionOrFutureTerms": {
                                  "description": "Describes the end date",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "LengthPromotionalInDays": {
                                  "description": "Describes the length if only a duration is given instead of a date",
                                  "type": "integer"
                                },
                                "DateOfChange": {
                                  "description": "Date of the change if it refers to future terms",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "FeeLowerTier": {
                                  "description": "Lower occurrence / range boundary e.g.. For returned cheques this could be 0, which means the first returned cheque fits into this range",
                                  "type": "integer"
                                },
                                "FeeHigherTier": {
                                  "description": "Higher occurrence / range boundary e.g. For returned cheques this could be 10, which means the first 10 returned cheque fits into this range",
                                  "type": "integer"
                                },
                                "FeeDetails": {
                                  "type": "array",
                                  "items": {
                                    "description": "Fee Details",
                                    "type": "object",
                                    "properties": {
                                      "FeeSubType": {
                                        "description": "Describes if the offering is promotional, regular or a description of a future state",
                                        "type": "string",
                                        "enum": ["Promotional", "Regular", "Future Regular Terms"]
                                      },
                                      "FeeDetail": {
                                        "description": "Fee Detail",
                                        "type": "object",
                                        "properties": {
                                          "FeeType": {
                                            "description": "A description of the Fee type",
                                            "type": "string",
                                            "enum": ["Account Fee", "Incoming CHAPS Fee", "Outgoing CHAPS Fee", "Foreign Currency", "Foreign Currency Withdrawal Fee (% of Tx - Min £2 - Max £5)", "Non Sterling Transaction Fee (Cash Withdrawal)", "SEPA Fee", "Stopped Cheque Fee", "Copy of Cheque Fee", "Cheque Transaction Fee", "Manual Debit Fee", "Counter Draft", "Unpaid Transaction Fee", "Special Cheque Presentation", "Court Order Fee", "Bankers Draft Fee", "Statement Copy Fee", "Bankers Reference Fee", "Personalised Card Fee", "Sterling Travellers Cheque (% of Tx - Min £2 - Max £5)", "International Payments Charge", "Other", "Cash payment In", "Cash payment Out", "Daily Monitoring", "Weekly Monitoring", "Monthly Monitoring", "Status Enquiry", "Audit Letter", "Credits paid in via night Safe", "Credit paid In via Depos ATM", "Telepay or Teledebit Item", "Balance Handlng Fee", "Late payment", "Loan arrangement", "Early Repayment charge", "Over credit limit fee", "Return payment fee", "Payment Scheme Exchange Rate", "Payment Scheme Exchange Fee", "Payment Scheme Exchange Fee Rate", "Non-Sterling Transaction fee", "Non-Sterling Transaction fee rate", "Non-Sterling Purchase Fee", "Non-Sterling Purchase Fee rate", "Non-Sterling Cash Fee", "Non-Sterling Cash Fee Rate", "Foreign Purchase Fee", "Foreign Purchase Fee Rate", "Foreign Cash Fee", "Foreign Cash Fee Rate", "Early Repayment Charges", "Tiered arrangement fees", "Monthly Account Maintenance Fee", "UK Sterling Direct Debits", "Standing order", "Business Debit card transaction (excluding ATM)", "ATM withdrawals (from a non-group ATM)", "ATM withdrawals (from a group ATM)", "Internet Bulk Payment - batch", "Automated credit", "Automated credit - Telephone and Internet Banking", "Automated credit –Faster Payments inbound", "Internet Bulk Payment –per item", "Faster Payments outbound", "Transfer to an account outside of the group", "Cheque paid in (or Postal Order)", "Cheques Out", "Cash paid in", "Cash paid out at own counter", "Other debit", "Other credit", "Credit paid in at another bank", "Cash exchanged", "Bacs – batch file submitted", "Bacs – debit or credit item", "Cardnet envelope paid in", "Credit paid in via Night Safe - up to £5K", "International payment Internet banking", "Express International Moneymover Branch", "Standard International Moneymover Branch", "Non-urgent Euro (SEPA)1 Branch", "International draft payable abroad Branch", "Electronic payments received from abroad Up to £100", "Electronic payments received from abroad over £100", "Foreign cheque/draft", "Cheques/drafts (including dividend warrants) payable in foreign currency or Sterling drawn abroad", "Cheques/drafts (including dividend warrants) payable in foreign currency drawn in the UK", "Unpaid charge (if the cheque/draft is not honoured by the paying bank)", "Status enquiries abroad", "Status enquiries abroad (if sent electronically) additional", "After an international payment has been sent abroad - Beneficiary claiming non-receipt of funds (BCNR) ", "After an international payment has been sent abroad - Recalling a payment", "First legal mortgage over a property, such as business premises", "Second or subsequent legal mortgage over a property, such as a house or business premises", "Unpaid Item", "SMS Text alerts", "SME unsecured loan fee", "World Currency Withdrawal Fee", "World Currency Purchase Fee", "Europe Currently Withdrawal Fee", "Europe Purchase Fee", "Minimum Foreign Cash Withdrawal Fee", "Maximum Foreign Cash Withdrawal Fee", "Security Fee", "Early Redemption Charge", "Paid Referral Fee", "Unpaid Referral Fee"]
                                          },
                                          "Other": {
                                            "description": "Describe other fee type",
                                            "type": "string"
                                          },
                                          "StartPromotionOrFutureTerms": {
                                            "description": "Describes the start date",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "StopPromotionOrFutureTerms": {
                                            "description": "Describes the end date",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "LengthPromotionalInDays": {
                                            "description": "Describes the length if only a duration is given instead of a date",
                                            "type": "integer"
                                          },
                                          "DateOfChange": {
                                            "description": "Date of the change if it refers to future terms",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "FeeSubDetails": {
                                            "description": "Fee Sub Details",
                                            "type": "object",
                                            "properties": {
                                              "FeeFrequency": {
                                                "description": "Triggering frequency of the fee",
                                                "type": "string",
                                                "enum": ["Monthly", "Per Transaction - Amount", "Per Transaction - Percentage", "Per Occurrence", "Daily", "5 consecutive business days", "Weekly", "Statement Monthly", "Quarterly", "6 monthly", "Yearly", "On account anniversary", "Charging period", "Item", "Account opening", "Account Closing", "Academic Term", "One time payment at the start of the loan", "At the time of repayment", "per hour", "per sheet"]
                                              },
                                              "FeeAmount": {
                                                "description": "Fee in GBP",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                              },
                                              "FeeRate": {
                                                "description": "% Rate",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                              },
                                              "Negotiable": {
                                                "description": "Indicates that this Fee Rate or Fee Amount is negotiable based on risk or other factor",
                                                "type": "boolean"
                                              },
                                              "RepresentativeRate": {
                                                "description": "Representative Rate",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                              },
                                              "FeeLowerTier": {
                                                "description": "Lower occurrence / range boundary e.g. For returned cheques this could be 0, which means the first returned cheque fits into this range",
                                                "type": "integer"
                                              },
                                              "FeeHigherTier": {
                                                "description": "Higher occurrence / range boundary e.g. For returned cheques this could be 10, which means the first 10 returned cheque fits into this range",
                                                "type": "integer"
                                              },
                                              "FeesAndChargesNotes": {
                                                "description": "Supplementary information for fees and charges",
                                                "type": "string"
                                              }
                                            },
                                            "required": ["FeeFrequency", "FeeAmount", "Negotiable"],
                                            "additionalProperties": false
                                          }
                                        },
                                        "required": ["FeeType", "FeeSubDetails"],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": ["FeeSubType", "FeeDetail"],
                                    "additionalProperties": false
                                  },
                                  "minItems": 1
                                }
                              },
                              "required": ["FeeDetails"],
                              "additionalProperties": false
                            }
                          },
                          "required": ["ProductSubType", "Fees"],
                          "additionalProperties": false
                        },
                        "minItems": 1
                      },
                      "Benefits": {
                        "description": "Benefit",
                        "type": "object",
                        "properties": {
                          "Benefit": {
                            "description": "Describe  one or more benefits if they exist",
                            "type": "boolean"
                          },
                          "BenefitGroup": {
                            "type": "array",
                            "items": {
                              "description": "Benefit Interest Group",
                              "type": "object",
                              "properties": {
                                "BenefitSubType": {
                                  "description": "Describes if the offering is promotional, regular or a description of a future state",
                                  "type": "string",
                                  "enum": ["Promotional", "Regular", "Future Regular Terms"]
                                },
                                "BenefitItem": {
                                  "description": "Benefit Item",
                                  "type": "object",
                                  "properties": {
                                    "StartPromotionOrFutureTerms": {
                                      "description": "Describes the start date",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "StopPromotionOrFutureTerms": {
                                      "description": "Describes the end date",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "LengthPromotionalInDays": {
                                      "description": "Describes the length if only a duration is given instead of a date in days",
                                      "type": "integer"
                                    },
                                    "DateOfChange": {
                                      "description": "Date of the change if it refers to future terms",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "BenefitDetail": {
                                      "type": "array",
                                      "items": {
                                        "description": "Benefit detail",
                                        "type": "object",
                                        "properties": {
                                          "BenefitType": {
                                            "description": "Type that represents the nature of the benefit",
                                            "type": "string"
                                          },
                                          "BenefitName": {
                                            "description": "The name of the benefit",
                                            "type": "string"
                                          },
                                          "BenefitValue": {
                                            "description": "The value or values permissible for a specific benefit for an individual product representing a product characteristic",
                                            "type": "string"
                                          },
                                          "DefaultToAccounts": {
                                            "description": "Is the benefit part of the default account",
                                            "type": "boolean"
                                          },
                                          "BenefitID": {
                                            "description": "Unique benefit identifier per organisation",
                                            "type": "string"
                                          },
                                          "CriteriaType": {
                                            "type": "array",
                                            "items": {
                                              "description": "Criteria that is required in order to be eligible for the Benefit",
                                              "type": "string",
                                              "enum": ["Deposit", "Direct Debit", "Other"]
                                            }
                                          },
                                          "MinimumCriteria": {
                                            "description": "Minimum amount for the criteria",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                          },
                                          "MaximumCriteria": {
                                            "description": "Maximum amount for the criteria",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                          },
                                          "Counter": {
                                            "description": "Counter for the criteria (e.g. number of DD)",
                                            "type": "integer"
                                          },
                                          "BenefitDescription": {
                                            "description": "A textual explanation of what the benefit is",
                                            "type": "string"
                                          },
                                          "PromotionStartDate": {
                                            "description": "If the benefit is temporal the start date is when the benefit comes into effect",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "PromotionEndDate": {
                                            "description": "If the benefit is temporal the end date is when the benefit is no longer applicable",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "required": ["BenefitItem"],
                              "additionalProperties": false
                            }
                          }
                        },
                        "required": ["Benefit"],
                        "additionalProperties": false
                      }
                    },
                    "required": ["Organisation", "ProductType", "ProductSegment", "InternationalPaymentsSupported", "ProductIdentifier", "CardWithdrawalLimit", "ProductDescription", "TsandCs", "AccessChannels", "CardType", "Contactless", "ChequeBookAvailable", "CreditScoringPartOfAccountOpeningForGettingAnAccount", "ProductURL", "Currency", "OverdraftOffered", "CAPricing", "Eligibility", "CreditInterest", "FeesAndCharges", "Benefits"]
                  }
                }
              },
              "required": ["meta", "data"],
              "additionalProperties": false
            }
          },
          "400": {
            "description": "You have sent a request which could not be understood.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "400 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["400"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Bad request"]
                },
                "description": {
                  "type": "string",
                  "enum": ["You have sent a request which could not be understood."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "408": {
            "description": "Your client has failed to submit a request, and a timeout has occurred.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "408 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["408"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Client timeout"]
                },
                "description": {
                  "type": "string",
                  "enum": ["Your client has failed to submit a request, and a timeout has occurred."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "429": {
            "description": "You have requested this resource too often. Slow down.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "429 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["429"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Too many requests"]
                },
                "description": {
                  "type": "string",
                  "enum": ["You have requested this resource too often. Slow down."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "500": {
            "description": "An error occurred on the server. No further information is available.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "500 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["500"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Internal server error"]
                },
                "description": {
                  "type": "string",
                  "enum": ["An error occurred on the server. No further information is available."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "503 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["503"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Service temporarily unavailable"]
                },
                "description": {
                  "type": "string",
                  "enum": ["The service is temporarily unavailable."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "default": {
            "description": "A standard error response.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "Error object",
              "type": "object",
              "properties": {
                "status": {
                  "description": "This corresponds to the HTTP status code",
                  "type": "string"
                },
                "title": {
                  "description": "A short title of the type of error",
                  "type": "string"
                },
                "description": {
                  "description": "Further details describing the error",
                  "type": "string"
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          }
        }
      },
      "head": {
        "tags": ["BCA"],
        "description": "Gets header information on the current set of `Business Current Account` data",
        "parameters": [{
          "name": "If-Modified-Since",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if modified since a given date",
          "in": "header",
          "required": false
        }, {
          "name": "If-None-Match",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "in": "header",
          "required": false
        }],
        "responses": {
          "default": {
            "description": "No response",
            "schema": {
              "title": "No response",
              "type": "object",
              "properties": {}
            }
          }
        }
      }
    },
    "/unsecured-sme-loans": {
      "get": {
        "tags": ["SME"],
        "description": "Gets a list of all `Unsercured SME Lending` objects.",
        "parameters": [{
          "name": "If-Modified-Since",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if modified since a given date",
          "in": "header",
          "required": false
        }, {
          "name": "If-None-Match",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "in": "header",
          "required": false
        }],
        "responses": {
          "200": {
            "description": "Successful response with a list of `Unsecured SME Lending` data",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header",
                "default": "max-age=31536000"
              },
              "Etag": {
                "type": "string",
                "description": "A unique ID identifying whether this resource has changed"
              },
              "Cache-Control": {
                "type": "string",
                "description": "Describes how long this response can be cached",
                "default": "max-age=28800"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "title": "Meta data",
                  "type": "object",
                  "properties": {
                    "LastUpdated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "TotalResults": {
                      "type": "integer"
                    },
                    "Agreement": {
                      "type": "string",
                      "enum": ["Use of the APIs and any related data will be subject to the terms of the Open Licence and subject to terms and conditions"]
                    },
                    "License": {
                      "description": "Change Banking License",
                      "type": "string",
                      "format": "uri",
                      "enum": ["http://www.changebanking.uk/Open-Licence"]
                    },
                    "TermsOfUse": {
                      "description": "Change Banking Terms of Use",
                      "type": "string",
                      "format": "uri",
                      "enum": ["http://www.changebanking.uk/API-Terms"]
                    }
                  },
                  "required": ["LastUpdated", "TotalResults", "Agreement", "License", "TermsOfUse"],
                  "additionalProperties": false
                },
                "data": {
                  "type": "array",
                  "items": {
                    "description": "SME Loan",
                    "type": "object",
                    "properties": {
                      "Organisation": {
                        "description": "Organisation",
                        "type": "object",
                        "properties": {
                          "ParentGroupName": {
                            "description": "Parent company that owns or partially owns subsidiary organisations",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 350
                          },
                          "ParentGroupID": {
                            "description": "Unique and unambiguous identification of a financial institution, as assigned under an internationally recognised or proprietary identification scheme",
                            "type": "string",
                            "pattern": "[A-Z]{6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3})?"
                          },
                          "BrandName": {
                            "description": "Name or image that links products provided by a single provider together for the purpose of providing a common identity for marketing and other purposes.",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 35
                          },
                          "BrandID": {
                            "description": "Unique and unambiguous way to identify the brand",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 35
                          }
                        },
                        "required": ["ParentGroupName", "ParentGroupID", "BrandName", "BrandID"],
                        "additionalProperties": false
                      },
                      "ProductName": {
                        "description": "The short product or marketing name assigned by the parent organisation",
                        "type": "string"
                      },
                      "ProductIdentifier": {
                        "description": "Identifier within the parent organisation for the product. Must be unique in the organisation",
                        "type": "string"
                      },
                      "ArrearsTreatment": {
                        "description": "Arrears treatment",
                        "type": "string"
                      },
                      "ProductTypeName": {
                        "description": "Descriptive code for the product category",
                        "type": "string",
                        "enum": ["SME Unsecured Loan", "Small Business Loan", "Flexible Business Loan"]
                      },
                      "ProductURL": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1
                      },
                      "ProductSegment": {
                        "type": "array",
                        "items": {
                          "description": "Marketing or industry segment that the product is applicable for. Gives the sector or segment that the Loan is designed for",
                          "type": "string",
                          "enum": ["Corporate", "Business", "Fixed", "Specialised Sector", "Government Scheme", "Agriculture Sector", "Small Loan", "Flexible Business Loan", "All Segments"]
                        },
                        "minItems": 1
                      },
                      "ProductDescription": {
                        "description": "Description of the product provided by the parent Organisation",
                        "type": "string"
                      },
                      "TsandCs": {
                        "description": "URL provided by the parent organisation which redirects to the T&Cs",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1
                      },
                      "CustomerAccessChannels": {
                        "description": "Ways to interact with the bank",
                        "type": "array",
                        "items": {
                          "description": "Channel",
                          "type": "string",
                          "enum": ["Branch", "Post", "Internet", "Phone", "Smartphone", "Text", "Call centre"]
                        },
                        "minItems": 1
                      },
                      "Currency": {
                        "description": "Currency of the Account. Default to GBP at present",
                        "type": "array",
                        "items": {
                          "description": "Active or Historic Currency Code",
                          "type": "string",
                          "pattern": "[A-Z]{3}"
                        },
                        "minItems": 1
                      },
                      "MinimumLoanTerm": {
                        "description": "Minimum term (Days)",
                        "type": "integer"
                      },
                      "MaximumLoanTerm": {
                        "description": "Maximum loan term (Days)",
                        "type": "integer"
                      },
                      "MinimumLoanAmount": {
                        "description": "Minimum loan amount",
                        "type": "string",
                        "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                      },
                      "MaximumLoanAmount": {
                        "description": "Maximum loan amount",
                        "type": "string",
                        "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                      },
                      "PaymentHoliday": {
                        "description": "Indicates whether a repayment holiday is allowed",
                        "type": "boolean"
                      },
                      "LoanItem": {
                        "type": "array",
                        "items": {
                          "description": "Loan Item",
                          "type": "object",
                          "properties": {
                            "ProductSubType": {
                              "description": "Describes if the offering is promotional, regular or a description of a future state",
                              "type": "string",
                              "enum": ["Promotional", "Regular", "Future Regular Terms"]
                            },
                            "StartPromotionOrFutureTerms": {
                              "description": "Describes the start date",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "StopPromotionOrFutureTerms": {
                              "description": "Describes the end date",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "LengthPromotionalInDays": {
                              "description": "Describes the length if only a duration is given instead of a date in days",
                              "type": "integer"
                            },
                            "DateOfChange": {
                              "description": "Date of the change if it refers to future terms",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "LoanPricing": {
                              "type": "array",
                              "items": {
                                "description": "Loan Pricing",
                                "type": "object",
                                "properties": {
                                  "SizeIncrement": {
                                    "description": "Identifier for tier only where it has been supplied under Part 8 (article 32 or the CMA order), value reflects upper tier value",
                                    "type": "string",
                                    "enum": ["£ 5,000", "£ 10,000", "£ 15,000", "£ 20,000", "£ 25,000"]
                                  },
                                  "LoanLengthIncrement": {
                                    "description": "Loan Length Increments",
                                    "type": "string",
                                    "enum": ["1 year", "2 years", "3 years", "4 years", "5 years"]
                                  },
                                  "RepaymentFrequency": {
                                    "type": "array",
                                    "items": {
                                      "description": "Loan Repayment type",
                                      "type": "string",
                                      "enum": ["Interest only", "Repayment with a bullet", "Custom schedule", "Fixed capital fully amortising", "Fixed capital with a bullet", "Capital Interest", "Bullet or Ballon", "Bullet", "Stragith Line Interest Only"]
                                    },
                                    "minItems": 1,
                                    "uniqueItems": true
                                  },
                                  "LoanSizeBandLower": {
                                    "description": "Monetary amount without currency",
                                    "type": "string",
                                    "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                  },
                                  "LoanSizeBandUpper": {
                                    "description": "Monetary amount without currency",
                                    "type": "string",
                                    "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                  },
                                  "LoanLengthIncrementLower": {
                                    "type": "integer"
                                  },
                                  "LoanLengthIncrementUpper": {
                                    "type": "integer"
                                  },
                                  "IndicativeRate": {
                                    "type": "string"
                                  },
                                  "RateComparisonType": {
                                    "description": "Rate Comparison Type",
                                    "type": "string",
                                    "enum": ["APR", "AER", "Gross"]
                                  },
                                  "Negotiable": {
                                    "type": "boolean"
                                  }
                                },
                                "required": ["SizeIncrement", "LoanLengthIncrement", "RepaymentFrequency", "LoanSizeBandLower", "LoanSizeBandUpper", "LoanLengthIncrementLower", "LoanLengthIncrementUpper", "IndicativeRate", "Negotiable"],
                                "additionalProperties": false
                              },
                              "minItems": 1
                            },
                            "CCARegulatedEntity": {
                              "type": "boolean"
                            },
                            "IsALowInterestRepaymentStartPossible": {
                              "type": "boolean"
                            },
                            "IsThisAnInterestOnlyLoan": {
                              "type": "boolean"
                            },
                            "WillTheLoanBePaidInTrancheDrawdowns": {
                              "type": "boolean"
                            }
                          },
                          "required": ["ProductSubType", "LoanPricing", "CCARegulatedEntity", "IsALowInterestRepaymentStartPossible", "IsThisAnInterestOnlyLoan", "WillTheLoanBePaidInTrancheDrawdowns"],
                          "additionalProperties": false
                        }
                      },
                      "Eligibility": {
                        "description": "Eligibility",
                        "type": "object",
                        "properties": {
                          "AgeRestricted": {
                            "description": "Indicates a customer's age is part of eligibility criteria",
                            "type": "boolean"
                          },
                          "MinimumAge": {
                            "description": "Minimum age, in years, required to hold an account",
                            "type": "integer"
                          },
                          "MaximumAge": {
                            "description": "Maximum age, in years, allowed to hold the account",
                            "type": "integer"
                          },
                          "MaximumAgeToOpen": {
                            "description": "Maximum age, in years, to open an account",
                            "type": "integer"
                          },
                          "OtherFinancialHoldingRequired": {
                            "description": "Indicates that it is necessary to hold another product with the bank in order to be eligible for this product or feature",
                            "type": "boolean"
                          },
                          "Description": {
                            "description": "One paragraph detailing the eligibility",
                            "type": "string"
                          },
                          "IncomeTurnoverRelated": {
                            "description": "Indicates if eligibility linked to income",
                            "type": "boolean"
                          },
                          "SingleJointIncome": {
                            "description": "Minimum Income Source. For certain products a minimum income is required. This can be mandated as to the single income or to a joint income. This field describes this",
                            "type": "string",
                            "enum": ["Single Income", "Joint Income", "Single or Joint Income"]
                          },
                          "MinimumIncomeTurnoverAmount": {
                            "description": "Minimum income / Turnover required to hold the product",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "MinimumIncomeTurnoverCurrency": {
                            "description": "Minimum income / Turnover Currency",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "IncomeCondition": {
                            "description": "Stipulates any particular definition of income that applies to the income eligibility and/or method by which income must paid into the account (eg Salary DD)",
                            "type": "string"
                          },
                          "MinIncomeTurnoverPaidIntoAccount": {
                            "description": "Minimum Income Amount required to paid into the account",
                            "type": "integer"
                          },
                          "MinimumIncomeFrequency": {
                            "description": "The frequency that the minimum mentioned before is deposited in the account. Yearly is very important for premium accounts",
                            "type": "string",
                            "enum": ["Daily", "Weekly", "Monthly", "Yearly", "University Term", "Flexible"]
                          },
                          "AnnualBusinessTurnover": {
                            "description": "Annual Business Turnover",
                            "type": "integer"
                          },
                          "AnnualBusinessTurnoverCurrency": {
                            "description": "Annual Business Turnover Currency",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "ResidencyRestricted": {
                            "description": "Indicates a customer's residency forms part of the eligibility criteria",
                            "type": "boolean"
                          },
                          "ResidencyRestrictedRegion": {
                            "description": "Indicates a customer must be current resident of a geographic area/country",
                            "type": "string",
                            "enum": ["UK", "EEA", "EU", "EFTA", "GB - ENG", "GB - NIR", "GB - SCT", "GB - WLS", "IRL"]
                          },
                          "MaxNumberOfAccounts": {
                            "description": "Maximum number of the same prodcut the customer may hold",
                            "type": "string"
                          },
                          "ThirdSectorOrganisations": {
                            "description": "Is the product available to operate as a Clubs or Societies account?",
                            "type": "boolean"
                          },
                          "MinimumDeposit": {
                            "description": "A minimum deposit required to hold this account",
                            "type": "boolean"
                          },
                          "OpeningDepositMinimum": {
                            "description": "Minimum Amount to be held on account",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "OpeningDepositMinimumCurrency": {
                            "description": "The currency of the Minimum Amount to be depositing at opening",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "MinimumOperatingBalanceExists": {
                            "description": "Is there a Minimum Operating Balance?",
                            "type": "boolean"
                          },
                          "MinimumOperatingBalance": {
                            "description": "Minimum Operating Balance",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "MinimumOperatingBalanceCurrency": {
                            "description": "Minimum Operating Balance currency",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "MaximumOpeningAmount": {
                            "description": "A maximum amount to be deposited at opening",
                            "type": "boolean"
                          },
                          "OpeningDepositMaximumAmount": {
                            "description": "Maximum Amount to be depositing at opening",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "OpeningDepositMaximumCurrency": {
                            "description": "The currency of the Minimum Amount to be depositing at opening",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "EligibilityName": {
                            "description": "Free text description, denotes non standard eligibilities not included in the code list",
                            "type": "string"
                          },
                          "EligibilityType": {
                            "description": "Eligibility type",
                            "type": "string",
                            "enum": ["Business Only", "Students Only", "NTB Business", "Credit Scoring", "Sole UK account", "Any business customer", "ID and Verification", "Arrears on Loan, Credit Card, mortgage", "Over Overdraft for more than 30 days", "Sole UK Account or Bankrupt", "UCAS Fulltime for 2 years", "Date Limited (2 months within course start date)", "Email Address", "Sole Student Account"]
                          },
                          "EligibilityNotes": {
                            "description": "Optional additional notes to supplement the eligibility conditions. Only used for very specific conditions",
                            "type": "string"
                          },
                          "PreviousBankruptcy": {
                            "description": "Describes if a previous bankruptcy / insolvency disqualfies for this account Details in ELI-280",
                            "type": "boolean"
                          },
                          "MarketingEligibility": {
                            "type": "array",
                            "items": {
                              "description": "Specific eligibility for marketing",
                              "type": "string",
                              "enum": ["Switchers Only", "New Customers Only"]
                            },
                            "uniqueItems": true
                          }
                        },
                        "required": ["AgeRestricted", "OtherFinancialHoldingRequired", "Description", "IncomeTurnoverRelated", "ResidencyRestricted", "ThirdSectorOrganisations", "PreviousBankruptcy"],
                        "additionalProperties": false
                      },
                      "FeesAndCharges": {
                        "type": "array",
                        "items": {
                          "description": "Fees And Charges",
                          "type": "object",
                          "properties": {
                            "ProductSubType": {
                              "description": "Describes if the offering is promotional, regular or a description of a future state",
                              "type": "string",
                              "enum": ["Promotional", "Regular", "Future Regular Terms"]
                            },
                            "Fees": {
                              "description": "Fees",
                              "type": "object",
                              "properties": {
                                "StartPromotionOrFutureTerms": {
                                  "description": "Describes the start date",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "StopPromotionOrFutureTerms": {
                                  "description": "Describes the end date",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "LengthPromotionalInDays": {
                                  "description": "Describes the length if only a duration is given instead of a date",
                                  "type": "integer"
                                },
                                "DateOfChange": {
                                  "description": "Date of the change if it refers to future terms",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "FeeLowerTier": {
                                  "description": "Lower occurrence / range boundary e.g.. For returned cheques this could be 0, which means the first returned cheque fits into this range",
                                  "type": "integer"
                                },
                                "FeeHigherTier": {
                                  "description": "Higher occurrence / range boundary e.g. For returned cheques this could be 10, which means the first 10 returned cheque fits into this range",
                                  "type": "integer"
                                },
                                "FeeDetails": {
                                  "type": "array",
                                  "items": {
                                    "description": "Fee Details",
                                    "type": "object",
                                    "properties": {
                                      "FeeSubType": {
                                        "description": "Describes if the offering is promotional, regular or a description of a future state",
                                        "type": "string",
                                        "enum": ["Promotional", "Regular", "Future Regular Terms"]
                                      },
                                      "FeeDetail": {
                                        "description": "Fee Detail",
                                        "type": "object",
                                        "properties": {
                                          "FeeType": {
                                            "description": "A description of the Fee type",
                                            "type": "string",
                                            "enum": ["Account Fee", "Incoming CHAPS Fee", "Outgoing CHAPS Fee", "Foreign Currency", "Foreign Currency Withdrawal Fee (% of Tx - Min £2 - Max £5)", "Non Sterling Transaction Fee (Cash Withdrawal)", "SEPA Fee", "Stopped Cheque Fee", "Copy of Cheque Fee", "Cheque Transaction Fee", "Manual Debit Fee", "Counter Draft", "Unpaid Transaction Fee", "Special Cheque Presentation", "Court Order Fee", "Bankers Draft Fee", "Statement Copy Fee", "Bankers Reference Fee", "Personalised Card Fee", "Sterling Travellers Cheque (% of Tx - Min £2 - Max £5)", "International Payments Charge", "Other", "Cash payment In", "Cash payment Out", "Daily Monitoring", "Weekly Monitoring", "Monthly Monitoring", "Status Enquiry", "Audit Letter", "Credits paid in via night Safe", "Credit paid In via Depos ATM", "Telepay or Teledebit Item", "Balance Handlng Fee", "Late payment", "Loan arrangement", "Early Repayment charge", "Over credit limit fee", "Return payment fee", "Payment Scheme Exchange Rate", "Payment Scheme Exchange Fee", "Payment Scheme Exchange Fee Rate", "Non-Sterling Transaction fee", "Non-Sterling Transaction fee rate", "Non-Sterling Purchase Fee", "Non-Sterling Purchase Fee rate", "Non-Sterling Cash Fee", "Non-Sterling Cash Fee Rate", "Foreign Purchase Fee", "Foreign Purchase Fee Rate", "Foreign Cash Fee", "Foreign Cash Fee Rate", "Early Repayment Charges", "Tiered arrangement fees", "Monthly Account Maintenance Fee", "UK Sterling Direct Debits", "Standing order", "Business Debit card transaction (excluding ATM)", "ATM withdrawals (from a non-group ATM)", "ATM withdrawals (from a group ATM)", "Internet Bulk Payment - batch", "Automated credit", "Automated credit - Telephone and Internet Banking", "Automated credit –Faster Payments inbound", "Internet Bulk Payment –per item", "Faster Payments outbound", "Transfer to an account outside of the group", "Cheque paid in (or Postal Order)", "Cheques Out", "Cash paid in", "Cash paid out at own counter", "Other debit", "Other credit", "Credit paid in at another bank", "Cash exchanged", "Bacs – batch file submitted", "Bacs – debit or credit item", "Cardnet envelope paid in", "Credit paid in via Night Safe - up to £5K", "International payment Internet banking", "Express International Moneymover Branch", "Standard International Moneymover Branch", "Non-urgent Euro (SEPA)1 Branch", "International draft payable abroad Branch", "Electronic payments received from abroad Up to £100", "Electronic payments received from abroad over £100", "Foreign cheque/draft", "Cheques/drafts (including dividend warrants) payable in foreign currency or Sterling drawn abroad", "Cheques/drafts (including dividend warrants) payable in foreign currency drawn in the UK", "Unpaid charge (if the cheque/draft is not honoured by the paying bank)", "Status enquiries abroad", "Status enquiries abroad (if sent electronically) additional", "After an international payment has been sent abroad - Beneficiary claiming non-receipt of funds (BCNR) ", "After an international payment has been sent abroad - Recalling a payment", "First legal mortgage over a property, such as business premises", "Second or subsequent legal mortgage over a property, such as a house or business premises", "Unpaid Item", "SMS Text alerts", "SME unsecured loan fee", "World Currency Withdrawal Fee", "World Currency Purchase Fee", "Europe Currently Withdrawal Fee", "Europe Purchase Fee", "Minimum Foreign Cash Withdrawal Fee", "Maximum Foreign Cash Withdrawal Fee", "Security Fee", "Early Redemption Charge", "Paid Referral Fee", "Unpaid Referral Fee"]
                                          },
                                          "Other": {
                                            "description": "Describe other fee type",
                                            "type": "string"
                                          },
                                          "StartPromotionOrFutureTerms": {
                                            "description": "Describes the start date",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "StopPromotionOrFutureTerms": {
                                            "description": "Describes the end date",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "LengthPromotionalInDays": {
                                            "description": "Describes the length if only a duration is given instead of a date",
                                            "type": "integer"
                                          },
                                          "DateOfChange": {
                                            "description": "Date of the change if it refers to future terms",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "FeeSubDetails": {
                                            "description": "Fee Sub Details",
                                            "type": "object",
                                            "properties": {
                                              "FeeFrequency": {
                                                "description": "Triggering frequency of the fee",
                                                "type": "string",
                                                "enum": ["Monthly", "Per Transaction - Amount", "Per Transaction - Percentage", "Per Occurrence", "Daily", "5 consecutive business days", "Weekly", "Statement Monthly", "Quarterly", "6 monthly", "Yearly", "On account anniversary", "Charging period", "Item", "Account opening", "Account Closing", "Academic Term", "One time payment at the start of the loan", "At the time of repayment", "per hour", "per sheet"]
                                              },
                                              "FeeAmount": {
                                                "description": "Fee in GBP",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                              },
                                              "FeeRate": {
                                                "description": "% Rate",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                              },
                                              "Negotiable": {
                                                "description": "Indicates that this Fee Rate or Fee Amount is negotiable based on risk or other factor",
                                                "type": "boolean"
                                              },
                                              "RepresentativeRate": {
                                                "description": "Representative Rate",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                              },
                                              "FeeLowerTier": {
                                                "description": "Lower occurrence / range boundary e.g. For returned cheques this could be 0, which means the first returned cheque fits into this range",
                                                "type": "integer"
                                              },
                                              "FeeHigherTier": {
                                                "description": "Higher occurrence / range boundary e.g. For returned cheques this could be 10, which means the first 10 returned cheque fits into this range",
                                                "type": "integer"
                                              },
                                              "FeesAndChargesNotes": {
                                                "description": "Supplementary information for fees and charges",
                                                "type": "string"
                                              }
                                            },
                                            "required": ["FeeFrequency", "FeeAmount", "Negotiable"],
                                            "additionalProperties": false
                                          }
                                        },
                                        "required": ["FeeType", "FeeSubDetails"],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": ["FeeSubType", "FeeDetail"],
                                    "additionalProperties": false
                                  },
                                  "minItems": 1
                                }
                              },
                              "required": ["FeeDetails"],
                              "additionalProperties": false
                            }
                          },
                          "required": ["ProductSubType", "Fees"],
                          "additionalProperties": false
                        },
                        "minItems": 1
                      },
                      "Benefits": {
                        "description": "Benefit",
                        "type": "object",
                        "properties": {
                          "Benefit": {
                            "description": "Describe  one or more benefits if they exist",
                            "type": "boolean"
                          },
                          "BenefitGroup": {
                            "type": "array",
                            "items": {
                              "description": "Benefit Interest Group",
                              "type": "object",
                              "properties": {
                                "BenefitSubType": {
                                  "description": "Describes if the offering is promotional, regular or a description of a future state",
                                  "type": "string",
                                  "enum": ["Promotional", "Regular", "Future Regular Terms"]
                                },
                                "BenefitItem": {
                                  "description": "Benefit Item",
                                  "type": "object",
                                  "properties": {
                                    "StartPromotionOrFutureTerms": {
                                      "description": "Describes the start date",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "StopPromotionOrFutureTerms": {
                                      "description": "Describes the end date",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "LengthPromotionalInDays": {
                                      "description": "Describes the length if only a duration is given instead of a date in days",
                                      "type": "integer"
                                    },
                                    "DateOfChange": {
                                      "description": "Date of the change if it refers to future terms",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "BenefitDetail": {
                                      "type": "array",
                                      "items": {
                                        "description": "Benefit detail",
                                        "type": "object",
                                        "properties": {
                                          "BenefitType": {
                                            "description": "Type that represents the nature of the benefit",
                                            "type": "string"
                                          },
                                          "BenefitName": {
                                            "description": "The name of the benefit",
                                            "type": "string"
                                          },
                                          "BenefitValue": {
                                            "description": "The value or values permissible for a specific benefit for an individual product representing a product characteristic",
                                            "type": "string"
                                          },
                                          "DefaultToAccounts": {
                                            "description": "Is the benefit part of the default account",
                                            "type": "boolean"
                                          },
                                          "BenefitID": {
                                            "description": "Unique benefit identifier per organisation",
                                            "type": "string"
                                          },
                                          "CriteriaType": {
                                            "type": "array",
                                            "items": {
                                              "description": "Criteria that is required in order to be eligible for the Benefit",
                                              "type": "string",
                                              "enum": ["Deposit", "Direct Debit", "Other"]
                                            }
                                          },
                                          "MinimumCriteria": {
                                            "description": "Minimum amount for the criteria",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                          },
                                          "MaximumCriteria": {
                                            "description": "Maximum amount for the criteria",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                          },
                                          "Counter": {
                                            "description": "Counter for the criteria (e.g. number of DD)",
                                            "type": "integer"
                                          },
                                          "BenefitDescription": {
                                            "description": "A textual explanation of what the benefit is",
                                            "type": "string"
                                          },
                                          "PromotionStartDate": {
                                            "description": "If the benefit is temporal the start date is when the benefit comes into effect",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "PromotionEndDate": {
                                            "description": "If the benefit is temporal the end date is when the benefit is no longer applicable",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "required": ["BenefitItem"],
                              "additionalProperties": false
                            }
                          }
                        },
                        "required": ["Benefit"],
                        "additionalProperties": false
                      }
                    },
                    "required": ["Organisation", "ProductName", "ProductIdentifier", "ProductTypeName", "ProductURL", "ProductSegment", "ProductDescription", "TsandCs", "CustomerAccessChannels", "Currency", "MinimumLoanTerm", "MaximumLoanTerm", "MinimumLoanAmount", "MaximumLoanAmount", "PaymentHoliday", "LoanItem", "Eligibility", "FeesAndCharges", "Benefits"],
                    "additionalProperties": false
                  }
                }
              },
              "required": ["meta", "data"],
              "additionalProperties": false
            }
          },
          "400": {
            "description": "You have sent a request which could not be understood.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "400 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["400"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Bad request"]
                },
                "description": {
                  "type": "string",
                  "enum": ["You have sent a request which could not be understood."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "408": {
            "description": "Your client has failed to submit a request, and a timeout has occurred.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "408 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["408"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Client timeout"]
                },
                "description": {
                  "type": "string",
                  "enum": ["Your client has failed to submit a request, and a timeout has occurred."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "429": {
            "description": "You have requested this resource too often. Slow down.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "429 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["429"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Too many requests"]
                },
                "description": {
                  "type": "string",
                  "enum": ["You have requested this resource too often. Slow down."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "500": {
            "description": "An error occurred on the server. No further information is available.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "500 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["500"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Internal server error"]
                },
                "description": {
                  "type": "string",
                  "enum": ["An error occurred on the server. No further information is available."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "503 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["503"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Service temporarily unavailable"]
                },
                "description": {
                  "type": "string",
                  "enum": ["The service is temporarily unavailable."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "default": {
            "description": "A standard error response.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "Error object",
              "type": "object",
              "properties": {
                "status": {
                  "description": "This corresponds to the HTTP status code",
                  "type": "string"
                },
                "title": {
                  "description": "A short title of the type of error",
                  "type": "string"
                },
                "description": {
                  "description": "Further details describing the error",
                  "type": "string"
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          }
        }
      },
      "head": {
        "tags": ["SME"],
        "description": "Gets header information on the current set of `Unsercured SME Lending` data",
        "parameters": [{
          "name": "If-Modified-Since",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if modified since a given date",
          "in": "header",
          "required": false
        }, {
          "name": "If-None-Match",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "in": "header",
          "required": false
        }],
        "responses": {
          "default": {
            "description": "No response",
            "schema": {
              "title": "No response",
              "type": "object",
              "properties": {}
            }
          }
        }
      }
    },
    "/commercial-credit-cards": {
      "get": {
        "tags": ["CCC"],
        "description": "Gets a list of all `Commerical Credit Card` objects.",
        "parameters": [{
          "name": "If-Modified-Since",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if modified since a given date",
          "in": "header",
          "required": false
        }, {
          "name": "If-None-Match",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "in": "header",
          "required": false
        }],
        "responses": {
          "200": {
            "description": "Successful response with a list of `Commercial Credit Card` data",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header",
                "default": "max-age=31536000"
              },
              "Etag": {
                "type": "string",
                "description": "A unique ID identifying whether this resource has changed"
              },
              "Cache-Control": {
                "type": "string",
                "description": "Describes how long this response can be cached",
                "default": "max-age=28800"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "title": "Meta data",
                  "type": "object",
                  "properties": {
                    "LastUpdated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "TotalResults": {
                      "type": "integer"
                    },
                    "Agreement": {
                      "type": "string",
                      "enum": ["Use of the APIs and any related data will be subject to the terms of the Open Licence and subject to terms and conditions"]
                    },
                    "License": {
                      "description": "Change Banking License",
                      "type": "string",
                      "format": "uri",
                      "enum": ["http://www.changebanking.uk/Open-Licence"]
                    },
                    "TermsOfUse": {
                      "description": "Change Banking Terms of Use",
                      "type": "string",
                      "format": "uri",
                      "enum": ["http://www.changebanking.uk/API-Terms"]
                    }
                  },
                  "required": ["LastUpdated", "TotalResults", "Agreement", "License", "TermsOfUse"],
                  "additionalProperties": false
                },
                "data": {
                  "type": "array",
                  "items": {
                    "description": "Commercial Credit Card",
                    "type": "object",
                    "properties": {
                      "Organisation": {
                        "description": "Organisation",
                        "type": "object",
                        "properties": {
                          "ParentGroupName": {
                            "description": "Parent company that owns or partially owns subsidiary organisations",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 350
                          },
                          "ParentGroupID": {
                            "description": "Unique and unambiguous identification of a financial institution, as assigned under an internationally recognised or proprietary identification scheme",
                            "type": "string",
                            "pattern": "[A-Z]{6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3})?"
                          },
                          "BrandName": {
                            "description": "Name or image that links products provided by a single provider together for the purpose of providing a common identity for marketing and other purposes.",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 35
                          },
                          "BrandID": {
                            "description": "Unique and unambiguous way to identify the brand",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 35
                          }
                        },
                        "required": ["ParentGroupName", "ParentGroupID", "BrandName", "BrandID"],
                        "additionalProperties": false
                      },
                      "ProductName": {
                        "description": "Name of the Commercial Credit Card",
                        "type": "string"
                      },
                      "ProductType": {
                        "description": "Descriptive code for the product category",
                        "type": "string",
                        "enum": ["Commercial Credit Cards"]
                      },
                      "ProductSegment": {
                        "description": "Marketing or industry segment that the product is designed for",
                        "type": "array",
                        "items": {
                          "description": "Marketing or industry segment that the product is designed for",
                          "type": "string",
                          "enum": ["CashBack", "Rewards", "Corporate", "SME", "General"]
                        }
                      },
                      "ProductIdentifier": {
                        "description": "Identifier within the parent organisation for the product. Must be unique in the organisation",
                        "type": "string"
                      },
                      "Description": {
                        "description": "Product description",
                        "type": "string"
                      },
                      "KeyFeatures": {
                        "description": "Product key features",
                        "type": "string"
                      },
                      "PaymentHoliday": {
                        "description": "Indicates whether a payment holiday is possible",
                        "type": "boolean"
                      },
                      "PaymentHolidayDescription": {
                        "description": "Detailed description on the payment holiday if available",
                        "type": "string"
                      },
                      "OtherKeyFeatures": {
                        "description": "Additional Features of the card",
                        "type": "string"
                      },
                      "TsandCs": {
                        "description": "URL provided by the parent organisation which redirects to the current T&Cs. Only applies on live products",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1
                      },
                      "Details": {
                        "description": "Commercial Credit Card Group ",
                        "type": "object",
                        "properties": {
                          "CCSubType": {
                            "description": "Describes if the offering is promotional, regular or a description of a future state",
                            "type": "string",
                            "enum": ["Promotional", "Regular", "Future Regular Terms"]
                          },
                          "CommercialCreditCardItem": {
                            "description": "Commercial Credit Card Item ",
                            "type": "object",
                            "properties": {
                              "StartPromotionOrFutureTerms": {
                                "description": "Describes the start date",
                                "type": "string",
                                "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                              },
                              "StopPromotionOrFutureTerms": {
                                "description": "Describes the end date",
                                "type": "string",
                                "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                              },
                              "LengthPromotionalInDays": {
                                "description": "Describes the length if only a duration is given instead of a date",
                                "type": "integer"
                              },
                              "DateOfChange": {
                                "description": "Date of the change if it refers to future terms",
                                "type": "string",
                                "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                              },
                              "MinimumCreditLimit": {
                                "description": "Minimum £500, maximum subject to status",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "RepaymentFrequency": {
                                "description": "Repayment frequency",
                                "type": "string",
                                "enum": ["Daily", "Weekly", "Monthly", "Yearly", "University Term", "Flexible"]
                              },
                              "APRRate": {
                                "description": "Annual Percentage Rate",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "BalanceTransferInterestRatePeriod": {
                                "description": "The period used to define the specific interest rate for balance transfers",
                                "type": "string",
                                "enum": ["Monthly", "Annual"]
                              },
                              "PurchaseRate": {
                                "description": "Purchase rate",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "BalanceTransferRate": {
                                "description": "Balance transfer rate",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "CashAdvanceRate": {
                                "description": "Cash advance rate",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "OverLimitFee": {
                                "description": "Fee applicable if the card was credited over its limit",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "MaximumNumberOfCardsPermitted": {
                                "description": "The maximum numbers of cards per account",
                                "type": "integer"
                              },
                              "CardScheme": {
                                "description": "Indicates the card scheme",
                                "type": "string",
                                "enum": ["Debit Visa", "Debit Mastercard", "Cashcard"]
                              },
                              "AbilityToSetIndividualLimits": {
                                "description": "The ability to set separate limts on different cards in one account",
                                "type": "boolean"
                              },
                              "AccessToOnlineDataReportingTool": {
                                "description": "Describes whether the account have access to an online tool for reprting on expenditure",
                                "type": "boolean"
                              },
                              "CashWithdrawalsAllowed": {
                                "description": "Describes whether cash withdrawals are allowed",
                                "type": "boolean"
                              },
                              "ConvenienceCheque": {
                                "description": "Describes whether the card account allow convenience cheques",
                                "type": "boolean"
                              },
                              "DaysInterestFreeCreditIfPaymentFull": {
                                "description": "Describes how many interest free days are given if the card is fully paid at each term",
                                "type": "integer"
                              },
                              "AnnualAccountFeeType": {
                                "description": "Details on annual account fee, such as non payable when there is a turnover above a certain sum",
                                "type": "string"
                              },
                              "IssuingEmergencyCardsFees": {
                                "description": "Amount payable for issuing an emergency card",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "AnnualFeeAmount": {
                                "description": "Standard fee on the card",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "ChequeFeePercent": {
                                "description": "Percentage fee on convenience cheques",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "CashbackPercent": {
                                "description": "Percent of cashback on amount spend",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "FeesOnCheque": {
                                "description": "Percentage fee on a convenince cheques",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "MinimumRepaymentPercentage": {
                                "description": "Minimum repayment as percentage",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "MinimumRepaymentAmount": {
                                "description": "Minimum repayment amount",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "PaymentDaysAfterStatement": {
                                "description": "How many days after statement is the payment expected",
                                "type": "integer"
                              },
                              "AllocationofRepayment": {
                                "description": "Allocation rules for repayment",
                                "type": "string"
                              },
                              "RepaymentNotes": {
                                "description": "Additional notes",
                                "type": "string"
                              },
                              "MinimumLendingAmount": {
                                "description": "The minimum lending available",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "StatementAtAccountLevel": {
                                "description": "Describes whether there is a statement at account level",
                                "type": "boolean"
                              },
                              "StatementAtPersonalLevel": {
                                "description": "Describes whether there is a statement at card level",
                                "type": "boolean"
                              },
                              "PaymentSchemeExchangeRate": {
                                "description": "The base exchange rate used in settlement of the transaction between issuer and scheme",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "ExchangeRateAdjustment": {
                                "description": "The margin added, by certain card issuers, to the scheme rate in order to arrive at the exchange rate qouted as the reference exchange rate to the cardholder",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "PaymentSchemeExchangeFee": {
                                "description": "Any payment network fee applied to some or all non-sterling transactions that the card issuer recover directly from the cardholder",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "PaymentSchemeExchangeFeeRate": {
                                "description": "Any payment network fee rate applied to some or all non-sterling transactions that the card issuer recover directly from the cardholder",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "NonSterlingTransactionFee": {
                                "description": "A fee applied to all non-Sterling card transactions",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "NonSterlingTransactionFeeRate": {
                                "description": "A fee rate applied to all non-Sterling card transactions",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "NonSterlingPurchaseFee": {
                                "description": "An additional fee applied to certain card retail transactions",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "NonSterlingPurchaseFeeRate": {
                                "description": "An additional fee rate applied to certain card retail transactions",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "NonSterlingCashFee": {
                                "description": "An additional fee applied to certain card cash withdrawals. This fee also applies to cash near fees such as gambling",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "NonSterlingCashFeeRate": {
                                "description": "An additional fee rate applied to certain card cash withdrawals. This fee also applies to cash near fees such as gambling",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "ForeignPurchaseFee": {
                                "description": "Additional card fee applied to sterling retail transactions made abroad",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "ForeignPurchaseFeeRate": {
                                "description": "Additional card fee rate applied to sterling retail transactions made abroad",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "ForeignCashFee": {
                                "description": "Additional card fee applied to sterling cash withdrawal made abroad",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "ForeignCashFeeRate": {
                                "description": "Additional card fee rate applied to sterling cash withdrawal made abroad",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              }
                            },
                            "required": ["MinimumCreditLimit", "RepaymentFrequency", "APRRate", "PurchaseRate", "CashAdvanceRate", "CardScheme", "AccessToOnlineDataReportingTool", "CashWithdrawalsAllowed", "ConvenienceCheque", "DaysInterestFreeCreditIfPaymentFull", "IssuingEmergencyCardsFees", "AnnualFeeAmount", "PaymentDaysAfterStatement", "StatementAtAccountLevel", "StatementAtPersonalLevel", "ExchangeRateAdjustment"],
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "Eligibility": {
                        "description": "Eligibility",
                        "type": "object",
                        "properties": {
                          "AgeRestricted": {
                            "description": "Indicates a customer's age is part of eligibility criteria",
                            "type": "boolean"
                          },
                          "MinimumAge": {
                            "description": "Minimum age, in years, required to hold an account",
                            "type": "integer"
                          },
                          "MaximumAge": {
                            "description": "Maximum age, in years, allowed to hold the account",
                            "type": "integer"
                          },
                          "MaximumAgeToOpen": {
                            "description": "Maximum age, in years, to open an account",
                            "type": "integer"
                          },
                          "OtherFinancialHoldingRequired": {
                            "description": "Indicates that it is necessary to hold another product with the bank in order to be eligible for this product or feature",
                            "type": "boolean"
                          },
                          "Description": {
                            "description": "One paragraph detailing the eligibility",
                            "type": "string"
                          },
                          "IncomeTurnoverRelated": {
                            "description": "Indicates if eligibility linked to income",
                            "type": "boolean"
                          },
                          "SingleJointIncome": {
                            "description": "Minimum Income Source. For certain products a minimum income is required. This can be mandated as to the single income or to a joint income. This field describes this",
                            "type": "string",
                            "enum": ["Single Income", "Joint Income", "Single or Joint Income"]
                          },
                          "MinimumIncomeTurnoverAmount": {
                            "description": "Minimum income / Turnover required to hold the product",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "MinimumIncomeTurnoverCurrency": {
                            "description": "Minimum income / Turnover Currency",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "IncomeCondition": {
                            "description": "Stipulates any particular definition of income that applies to the income eligibility and/or method by which income must paid into the account (eg Salary DD)",
                            "type": "string"
                          },
                          "MinIncomeTurnoverPaidIntoAccount": {
                            "description": "Minimum Income Amount required to paid into the account",
                            "type": "integer"
                          },
                          "MinimumIncomeFrequency": {
                            "description": "The frequency that the minimum mentioned before is deposited in the account. Yearly is very important for premium accounts",
                            "type": "string",
                            "enum": ["Daily", "Weekly", "Monthly", "Yearly", "University Term", "Flexible"]
                          },
                          "AnnualBusinessTurnover": {
                            "description": "Annual Business Turnover",
                            "type": "integer"
                          },
                          "AnnualBusinessTurnoverCurrency": {
                            "description": "Annual Business Turnover Currency",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "ResidencyRestricted": {
                            "description": "Indicates a customer's residency forms part of the eligibility criteria",
                            "type": "boolean"
                          },
                          "ResidencyRestrictedRegion": {
                            "description": "Indicates a customer must be current resident of a geographic area/country",
                            "type": "string",
                            "enum": ["UK", "EEA", "EU", "EFTA", "GB - ENG", "GB - NIR", "GB - SCT", "GB - WLS", "IRL"]
                          },
                          "MaxNumberOfAccounts": {
                            "description": "Maximum number of the same prodcut the customer may hold",
                            "type": "string"
                          },
                          "ThirdSectorOrganisations": {
                            "description": "Is the product available to operate as a Clubs or Societies account?",
                            "type": "boolean"
                          },
                          "MinimumDeposit": {
                            "description": "A minimum deposit required to hold this account",
                            "type": "boolean"
                          },
                          "OpeningDepositMinimum": {
                            "description": "Minimum Amount to be held on account",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "OpeningDepositMinimumCurrency": {
                            "description": "The currency of the Minimum Amount to be depositing at opening",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "MinimumOperatingBalanceExists": {
                            "description": "Is there a Minimum Operating Balance?",
                            "type": "boolean"
                          },
                          "MinimumOperatingBalance": {
                            "description": "Minimum Operating Balance",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "MinimumOperatingBalanceCurrency": {
                            "description": "Minimum Operating Balance currency",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "MaximumOpeningAmount": {
                            "description": "A maximum amount to be deposited at opening",
                            "type": "boolean"
                          },
                          "OpeningDepositMaximumAmount": {
                            "description": "Maximum Amount to be depositing at opening",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "OpeningDepositMaximumCurrency": {
                            "description": "The currency of the Minimum Amount to be depositing at opening",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "EligibilityName": {
                            "description": "Free text description, denotes non standard eligibilities not included in the code list",
                            "type": "string"
                          },
                          "EligibilityType": {
                            "description": "Eligibility type",
                            "type": "string",
                            "enum": ["Business Only", "Students Only", "NTB Business", "Credit Scoring", "Sole UK account", "Any business customer", "ID and Verification", "Arrears on Loan, Credit Card, mortgage", "Over Overdraft for more than 30 days", "Sole UK Account or Bankrupt", "UCAS Fulltime for 2 years", "Date Limited (2 months within course start date)", "Email Address", "Sole Student Account"]
                          },
                          "EligibilityNotes": {
                            "description": "Optional additional notes to supplement the eligibility conditions. Only used for very specific conditions",
                            "type": "string"
                          },
                          "PreviousBankruptcy": {
                            "description": "Describes if a previous bankruptcy / insolvency disqualfies for this account Details in ELI-280",
                            "type": "boolean"
                          },
                          "MarketingEligibility": {
                            "type": "array",
                            "items": {
                              "description": "Specific eligibility for marketing",
                              "type": "string",
                              "enum": ["Switchers Only", "New Customers Only"]
                            },
                            "uniqueItems": true
                          }
                        },
                        "required": ["AgeRestricted", "OtherFinancialHoldingRequired", "Description", "IncomeTurnoverRelated", "ResidencyRestricted", "ThirdSectorOrganisations", "PreviousBankruptcy"],
                        "additionalProperties": false
                      },
                      "Benefits": {
                        "description": "Benefit",
                        "type": "object",
                        "properties": {
                          "Benefit": {
                            "description": "Describe  one or more benefits if they exist",
                            "type": "boolean"
                          },
                          "BenefitGroup": {
                            "type": "array",
                            "items": {
                              "description": "Benefit Interest Group",
                              "type": "object",
                              "properties": {
                                "BenefitSubType": {
                                  "description": "Describes if the offering is promotional, regular or a description of a future state",
                                  "type": "string",
                                  "enum": ["Promotional", "Regular", "Future Regular Terms"]
                                },
                                "BenefitItem": {
                                  "description": "Benefit Item",
                                  "type": "object",
                                  "properties": {
                                    "StartPromotionOrFutureTerms": {
                                      "description": "Describes the start date",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "StopPromotionOrFutureTerms": {
                                      "description": "Describes the end date",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "LengthPromotionalInDays": {
                                      "description": "Describes the length if only a duration is given instead of a date in days",
                                      "type": "integer"
                                    },
                                    "DateOfChange": {
                                      "description": "Date of the change if it refers to future terms",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "BenefitDetail": {
                                      "type": "array",
                                      "items": {
                                        "description": "Benefit detail",
                                        "type": "object",
                                        "properties": {
                                          "BenefitType": {
                                            "description": "Type that represents the nature of the benefit",
                                            "type": "string"
                                          },
                                          "BenefitName": {
                                            "description": "The name of the benefit",
                                            "type": "string"
                                          },
                                          "BenefitValue": {
                                            "description": "The value or values permissible for a specific benefit for an individual product representing a product characteristic",
                                            "type": "string"
                                          },
                                          "DefaultToAccounts": {
                                            "description": "Is the benefit part of the default account",
                                            "type": "boolean"
                                          },
                                          "BenefitID": {
                                            "description": "Unique benefit identifier per organisation",
                                            "type": "string"
                                          },
                                          "CriteriaType": {
                                            "type": "array",
                                            "items": {
                                              "description": "Criteria that is required in order to be eligible for the Benefit",
                                              "type": "string",
                                              "enum": ["Deposit", "Direct Debit", "Other"]
                                            }
                                          },
                                          "MinimumCriteria": {
                                            "description": "Minimum amount for the criteria",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                          },
                                          "MaximumCriteria": {
                                            "description": "Maximum amount for the criteria",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                          },
                                          "Counter": {
                                            "description": "Counter for the criteria (e.g. number of DD)",
                                            "type": "integer"
                                          },
                                          "BenefitDescription": {
                                            "description": "A textual explanation of what the benefit is",
                                            "type": "string"
                                          },
                                          "PromotionStartDate": {
                                            "description": "If the benefit is temporal the start date is when the benefit comes into effect",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "PromotionEndDate": {
                                            "description": "If the benefit is temporal the end date is when the benefit is no longer applicable",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "required": ["BenefitItem"],
                              "additionalProperties": false
                            }
                          }
                        },
                        "required": ["Benefit"],
                        "additionalProperties": false
                      }
                    },
                    "required": ["Organisation", "ProductName", "ProductType", "ProductIdentifier", "Description", "KeyFeatures", "PaymentHoliday", "PaymentHolidayDescription", "TsandCs", "Details", "Eligibility", "Benefits"],
                    "additionalProperties": false
                  }
                }
              },
              "required": ["meta", "data"],
              "additionalProperties": false
            }
          },
          "400": {
            "description": "You have sent a request which could not be understood.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "400 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["400"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Bad request"]
                },
                "description": {
                  "type": "string",
                  "enum": ["You have sent a request which could not be understood."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "408": {
            "description": "Your client has failed to submit a request, and a timeout has occurred.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "408 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["408"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Client timeout"]
                },
                "description": {
                  "type": "string",
                  "enum": ["Your client has failed to submit a request, and a timeout has occurred."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "429": {
            "description": "You have requested this resource too often. Slow down.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "429 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["429"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Too many requests"]
                },
                "description": {
                  "type": "string",
                  "enum": ["You have requested this resource too often. Slow down."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "500": {
            "description": "An error occurred on the server. No further information is available.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "500 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["500"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Internal server error"]
                },
                "description": {
                  "type": "string",
                  "enum": ["An error occurred on the server. No further information is available."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "503 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["503"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Service temporarily unavailable"]
                },
                "description": {
                  "type": "string",
                  "enum": ["The service is temporarily unavailable."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "default": {
            "description": "A standard error response.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "Error object",
              "type": "object",
              "properties": {
                "status": {
                  "description": "This corresponds to the HTTP status code",
                  "type": "string"
                },
                "title": {
                  "description": "A short title of the type of error",
                  "type": "string"
                },
                "description": {
                  "description": "Further details describing the error",
                  "type": "string"
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          }
        }
      },
      "head": {
        "tags": ["CCC"],
        "description": "Gets header information on the current set of `Commerical Credit Card` data",
        "parameters": [{
          "name": "If-Modified-Since",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if modified since a given date",
          "in": "header",
          "required": false
        }, {
          "name": "If-None-Match",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "in": "header",
          "required": false
        }],
        "responses": {
          "default": {
            "description": "No response",
            "schema": {
              "title": "No response",
              "type": "object",
              "properties": {}
            }
          }
        }
      }
    }
  }
}