{
  "id": "http://localhost:8000/schemas/v1.2/sme_loan.json#",
  "description": "SME Loan",
  "type": "object",
  "properties": {
    "Organisation": {
      "id": "http://localhost:8000/schemas/v1.2/definitions/common/organisation.json#",
      "description": "Organisation",
      "type": "object",
      "properties": {
        "ParentGroupName": {
          "description": "Parent company that owns or partially owns subsidiary organisations",
          "id": "http://localhost:8000/schemas/v1.2/definitions/common/max_140_text.json#",
          "type": "string",
          "minLength": 1,
          "maxLength": 350
        },
        "ParentGroupID": {
          "description": "Unique and unambiguous identification of a financial institution, as assigned under an internationally recognised or proprietary identification scheme",
          "id": "http://localhost:8000/schemas/v1.2/definitions/common/bic.json#",
          "type": "string",
          "pattern": "[A-Z]{6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3})?"
        },
        "BrandName": {
          "description": "Name or image that links products provided by a single provider together for the purpose of providing a common identity for marketing and other purposes.",
          "id": "http://localhost:8000/schemas/v1.2/definitions/common/max_35_text.json#",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "BrandID": {
          "description": "Unique and unambiguous way to identify the brand",
          "id": "http://localhost:8000/schemas/v1.2/definitions/common/max_35_text.json#",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        }
      },
      "required": ["ParentGroupName", "ParentGroupID", "BrandName", "BrandID"],
      "additionalProperties": false
    },
    "ProductName": {
      "description": "The short product or marketing name assigned by the parent organisation",
      "type": "string"
    },
    "ProductIdentifier": {
      "description": "Identifier within the parent organisation for the product. Must be unique in the organisation",
      "type": "string"
    },
    "ArrearsTreatment": {
      "description": "Arrears treatment",
      "type": "string"
    },
    "ProductTypeName": {
      "description": "Descriptive code for the product category",
      "id": "http://localhost:8000/schemas/v1.2/definitions/smel/smel_product_type.json#",
      "type": "string",
      "enum": ["SME Unsecured Loan", "Small Business Loan", "Flexible Business Loan"]
    },
    "ProductSegment": {
      "id": "http://localhost:8000/schemas/v1.2/definitions/smel/smel_product_segment.json#",
      "description": "Marketing or industry segment that the product is applicable for. Gives the sector or segment that the Loan is designed for",
      "type": "string",
      "enum": ["Corporate", "Business", "Fixed", "Specialised Sector", "Government Scheme", "Agriculture Sector", "Small Loan", "Flexible Business Loan", "All Segments"]
    },
    "ProductDescription": {
      "description": "Description of the product provided by the parent Organisation",
      "type": "string"
    },
    "TsandCs": {
      "description": "URL provided by the parent organisation which redirects to the T&Cs",
      "type": "array",
      "items": {
        "type": "string"
      },
      "minItems": 1
    },
    "CustomerAccessChannels": {
      "description": "Ways to interact with the bank",
      "type": "array",
      "items": {
        "id": "http://localhost:8000/schemas/v1.2/definitions/channels.json#",
        "description": "Channel",
        "type": "string",
        "enum": ["Branch", "Post", "Internet", "Phone", "Smartphone", "Text", "Call centre"]
      },
      "minItems": 1
    },
    "Currency": {
      "description": "Currency of the Account. Default to GBP at present",
      "type": "array",
      "items": {
        "id": "http://localhost:8000/schemas/v1.2/definitions/common/active_or_historic_currency_code.json#",
        "description": "Active or Historic Currency Code",
        "type": "string",
        "pattern": "[A-Z]{3}"
      },
      "minItems": 1
    },
    "MinimumLoanTerm": {
      "description": "Minimum term (Days)",
      "type": "integer"
    },
    "MaximumLoanTerm": {
      "description": "Maximum loan term (Days)",
      "type": "integer"
    },
    "MinimumLoanAmount": {
      "description": "Minimum loan amount",
      "type": "number"
    },
    "MaximumLoanAmount": {
      "description": "Maximum loan amount",
      "type": "number"
    },
    "PaymentHoliday": {
      "description": "Indicates whether a repayment holiday is allowed",
      "type": "boolean"
    },
    "LoanItem": {
      "id": "http://localhost:8000/schemas/v1.2/definitions/loan/loan_item.json#",
      "description": "Loan Item",
      "type": "object",
      "properties": {
        "ProductSubType": {
          "id": "http://localhost:8000/schemas/v1.2/definitions/common/offering_subtype.json#",
          "description": "Describes if the offering is promotional, regular or a description of a future state",
          "type": "string",
          "enum": ["Promotional", "Regular", "Future Regular Terms"]
        },
        "StartPromotionOrFutureTerms": {
          "description": "Describes the start date",
          "id": "http://localhost:8000/schemas/v0/definitions/common/date.json#",
          "type": "string",
          "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
        },
        "StopPromotionOrFutureTerms": {
          "description": "Describes the end date",
          "id": "http://localhost:8000/schemas/v0/definitions/common/date.json#",
          "type": "string",
          "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
        },
        "LengthPromotionalInDays": {
          "description": "Describes the length if only a duration is given instead of a date in days",
          "type": "integer"
        },
        "DateOfChange": {
          "description": "Date of the change if it refers to future terms",
          "id": "http://localhost:8000/schemas/v0/definitions/common/date.json#",
          "type": "string",
          "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
        },
        "LoanPricing": {
          "type": "array",
          "items": {
            "id": "http://localhost:8000/schemas/v1.2/definitions/loan/loan_pricing.json#",
            "description": "Loan Pricing",
            "type": "object",
            "properties": {
              "SizeIncrement": {
                "id": "http://localhost:8000/schemas/v1.2/definitions/intsme.json#",
                "description": "Identifier for tier only where it has been supplied under Part 8 (article 32 or the CMA order), value reflects upper tier value",
                "type": "string",
                "enum": ["£ 5,000", "£ 10,000", "£ 15,000", "£ 20,000", "£ 25,000"]
              },
              "LoanLengthIncrement": {
                "id": "http://localhost:8000/schemas/v1.2/definitions/loan/loan_length_increment.json#",
                "description": "Loan Length Increments",
                "type": "string",
                "enum": ["1 year", "2 years", "3 years", "4 years", "5 years"]
              },
              "RepaymentFrequency": {
                "type": "array",
                "items": {
                  "id": "http://localhost:8000/schemas/v1.2/definitions/loan/loan_repayment_type.json#",
                  "description": "Loan Repayment type",
                  "type": "string",
                  "enum": ["Interest only", "Repayment with a bullet", "Custom schedule", "Fixed capital fully amortising", "Fixed capital with a bullet"]
                },
                "minItems": 1,
                "uniqueItems": true
              },
              "LoanSizeBandLower": {
                "type": "number"
              },
              "LoanSizeBandUpper": {
                "type": "number"
              },
              "LoanLengthIncrementLower": {
                "type": "integer"
              },
              "LoanLengthIncrementUpper": {
                "type": "integer"
              },
              "IndicativeRate": {
                "type": "string"
              },
              "RateComparisonType": {
                "id": "http://localhost:8000/schemas/v1.2/definitions/rate_comparison_type.json#",
                "description": "Rate Comparison Type",
                "type": "string",
                "enum": ["APR", "AER", "Gross"]
              },
              "Negotiable": {
                "type": "boolean"
              }
            },
            "required": ["SizeIncrement", "LoanLengthIncrement", "RepaymentFrequency", "LoanSizeBandLower", "LoanSizeBandUpper", "LoanLengthIncrementLower", "LoanLengthIncrementUpper", "IndicativeRate", "Negotiable"],
            "additionalProperties": false
          },
          "minItems": 1
        },
        "CCARegulatedEntity": {
          "type": "boolean"
        },
        "IsALowInterestRepaymentStartPossible": {
          "type": "boolean"
        },
        "IsThisAnInterestOnlyLoan": {
          "type": "boolean"
        },
        "WillTheLoanBePaidInTrancheDrawdowns": {
          "type": "boolean"
        }
      },
      "required": ["ProductSubType", "LoanPricing", "CCARegulatedEntity", "IsALowInterestRepaymentStartPossible", "IsThisAnInterestOnlyLoan", "WillTheLoanBePaidInTrancheDrawdowns"],
      "additionalProperties": false
    },
    "Eligibility": {
      "id": "http://localhost:8000/schemas/v1.2/definitions/eligibility/eligibility.json#",
      "description": "Eligibility",
      "type": "object",
      "properties": {
        "AgeRestricted": {
          "description": "Indicates a customer's age is part of eligibility criteria",
          "type": "boolean"
        },
        "MinimumAge": {
          "description": "Minimum age, in years, required to hold an account",
          "type": "integer"
        },
        "MaximumAge": {
          "description": "Maximum age, in years, allowed to hold the account",
          "type": "integer"
        },
        "MaximumAgeToOpen": {
          "description": "Maximum age, in years, to open an account",
          "type": "integer"
        },
        "OtherFinancialHoldingRequired": {
          "description": "Indicates that it is necessary to hold another product with the bank in order to be eligible for this product or feature",
          "type": "boolean"
        },
        "Description": {
          "description": "One paragraph detailing the eligibility",
          "type": "string"
        },
        "IncomeTurnoverRelated": {
          "description": "Indicates if eligibility linked to income",
          "type": "boolean"
        },
        "SingleJointIncome": {
          "id": "http://localhost:8000/schemas/v1.2/definitions/eligibility/income_type.json#",
          "description": "Minimum Income Source. For certain products a minimum income is required. This can be mandated as to the single income or to a joint income. This field describes this",
          "type": "string",
          "enum": ["Single Income", "Joint Income", "Single or Joint Income"]
        },
        "MinimumIncomeTurnoverAmount": {
          "description": "Minimum income / Turnover required to hold the product",
          "type": "number"
        },
        "MinimumIncomeTurnoverCurrency": {
          "description": "Minimum income / Turnover Currency",
          "id": "http://localhost:8000/schemas/v1.2/definitions/common/active_or_historic_currency_code.json#",
          "type": "string",
          "pattern": "[A-Z]{3}"
        },
        "IncomeCondition": {
          "description": "Stipulates any particular definition of income that applies to the income eligibility and/or method by which income must paid into the account (eg Salary DD)",
          "type": "string"
        },
        "MinIncomeTurnoverPaidIntoAccount": {
          "description": "Minimum Income Amount required to paid into the account",
          "type": "integer"
        },
        "MinimumIncomeFrequency": {
          "description": "The frequency that the minimum mentioned before is deposited in the account. Yearly is very important for premium accounts",
          "id": "http://localhost:8000/schemas/v1.2/definitions/common/frequency.json#",
          "type": "string",
          "enum": ["Daily", "Weekly", "Monthly", "Yearly", "University Term", "Flexible"]
        },
        "AnnualBusinessTurnover": {
          "description": "Annual Business Turnover",
          "type": "integer"
        },
        "AnnualBusinessTurnoverCurrency": {
          "description": "Annual Business Turnover Currency",
          "id": "http://localhost:8000/schemas/v1.2/definitions/common/active_or_historic_currency_code.json#",
          "type": "string",
          "pattern": "[A-Z]{3}"
        },
        "ResidencyRestricted": {
          "description": "Indicates a customer's residency forms part of the eligibility criteria",
          "type": "boolean"
        },
        "ResidencyRestrictedRegion": {
          "description": "Indicates a customer must be current resident of a geographic area/country",
          "id": "http://localhost:8000/schemas/v1.2/definitions/regions.json#",
          "type": "string",
          "enum": ["UK", "EEA", "EU", "EFTA", "GB - ENG", "GB - NIR", "GB - SCT", "GB - WLS", "IRL"]
        },
        "MaxNumberOfAccounts": {
          "description": "Maximum number of the same prodcut the customer may hold",
          "type": "string"
        },
        "ThirdSectorOrganisations": {
          "description": "Is the product available to operate as a Clubs or Societies account?",
          "type": "boolean"
        },
        "MinimumDeposit": {
          "description": "A minimum deposit required to hold this account",
          "type": "boolean"
        },
        "OpeningDepositMinimum": {
          "description": "Minimum Amount to be held on account",
          "type": "number"
        },
        "OpeningDepositMinimumCurrency": {
          "description": "The currency of the Minimum Amount to be depositing at opening",
          "id": "http://localhost:8000/schemas/v1.2/definitions/common/active_or_historic_currency_code.json#",
          "type": "string",
          "pattern": "[A-Z]{3}"
        },
        "MinimumOperatingBalanceExists": {
          "description": "Is there a Minimum Operating Balance?",
          "type": "boolean"
        },
        "MinimumOperatingBalance": {
          "description": "Minimum Operating Balance",
          "type": "number"
        },
        "MinimumOperatingBalanceCurrency": {
          "description": "Minimum Operating Balance currency",
          "id": "http://localhost:8000/schemas/v1.2/definitions/common/active_or_historic_currency_code.json#",
          "type": "string",
          "pattern": "[A-Z]{3}"
        },
        "MaximumOpeningAmount": {
          "description": "A maximum amount to be deposited at opening",
          "type": "boolean"
        },
        "OpeningDepositMaximumAmount": {
          "description": "Maximum Amount to be depositing at opening",
          "type": "number"
        },
        "OpeningDepositMaximumCurrency": {
          "description": "The currency of the Minimum Amount to be depositing at opening",
          "id": "http://localhost:8000/schemas/v1.2/definitions/common/active_or_historic_currency_code.json#",
          "type": "string",
          "pattern": "[A-Z]{3}"
        },
        "EligibilityName": {
          "description": "Free text description, denotes non standard eligibilities not included in the code list",
          "type": "string"
        },
        "EligibilityType": {
          "description": "Eligibility type",
          "id": "http://localhost:8000/schemas/v1.2/definitions/eligibility/eligibility_type.json#",
          "type": "string",
          "enum": ["Business Only", "Students Only", "NTB Business", "Credit Scoring", "Sole UK account", "Any business customer", "ID and Verification", "Arrears on Loan, Credit Card, mortgage", "Over Overdraft for more than 30 days", "Sole UK Account or Bankrupt", "UCAS Fulltime for 2 years", "Date Limited (2 months within course start date)", "Email Address", "Sole Student Account"]
        },
        "EligibilityNotes": {
          "description": "Optional additional notes to supplement the eligibility conditions. Only used for very specific conditions",
          "type": "string"
        },
        "PreviousBankruptcy": {
          "description": "Describes if a previous bankruptcy / insolvency disqualfies for this account Details in ELI-280",
          "type": "boolean"
        },
        "MarketingEligibility": {
          "type": "array",
          "items": {
            "id": "http://localhost:8000/schemas/v1.2/definitions/eligibility/marketing_eligibility.json#",
            "description": "Specific eligibility for marketing",
            "type": "string",
            "enum": ["Switchers Only", "New Customers Only"]
          },
          "uniqueItems": true
        }
      },
      "required": ["AgeRestricted", "OtherFinancialHoldingRequired", "Description", "IncomeTurnoverRelated", "ResidencyRestricted", "ThirdSectorOrganisations", "PreviousBankruptcy"],
      "additionalProperties": false
    },
    "FeesAndCharges": {
      "type": "array",
      "items": {
        "id": "http://localhost:8000/schemas/v1.2/definitions/fees/fees_and_charges.json#",
        "description": "Fees And Charges",
        "type": "object",
        "properties": {
          "ProductSubType": {
            "id": "http://localhost:8000/schemas/v1.2/definitions/common/offering_subtype.json#",
            "description": "Describes if the offering is promotional, regular or a description of a future state",
            "type": "string",
            "enum": ["Promotional", "Regular", "Future Regular Terms"]
          },
          "Fees": {
            "id": "http://localhost:8000/schemas/v1.2/definitions/fees/fees.json#",
            "description": "Fees",
            "type": "object",
            "properties": {
              "StartPromotionOrFutureTerms": {
                "description": "Describes the start date",
                "id": "http://localhost:8000/schemas/v1.2/definitions/common/date.json#",
                "type": "string",
                "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
              },
              "StopPromotionOrFutureTerms": {
                "description": "Describes the end date",
                "id": "http://localhost:8000/schemas/v1.2/definitions/common/date.json#",
                "type": "string",
                "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
              },
              "LengthPromotionalInDays": {
                "description": "Describes the length if only a duration is given instead of a date",
                "type": "integer"
              },
              "DateOfChange": {
                "description": "Date of the change if it refers to future terms",
                "id": "http://localhost:8000/schemas/v1.2/definitions/common/date.json#",
                "type": "string",
                "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
              },
              "FeeLowerTier": {
                "description": "Lower occurrence / range boundary e.g.. For returned cheques this could be 0, which means the first returned cheque fits into this range",
                "type": "number"
              },
              "FeeHigherTier": {
                "description": "Higher occurrence / range boundary e.g. For returned cheques this could be 10, which means the first 10 returned cheque fits into this range",
                "type": "number"
              },
              "FeeDetails": {
                "type": "array",
                "items": {
                  "id": "http://localhost:8000/schemas/v1.2/definitions/fees/fee_details.json#",
                  "description": "Fee Details",
                  "type": "object",
                  "properties": {
                    "FeeSubType": {
                      "id": "http://localhost:8000/schemas/v1.2/definitions/common/offering_subtype.json#",
                      "description": "Describes if the offering is promotional, regular or a description of a future state",
                      "type": "string",
                      "enum": ["Promotional", "Regular", "Future Regular Terms"]
                    },
                    "FeeDetail": {
                      "id": "http://localhost:8000/schemas/v1.2/definitions/fees/fee_detail.json#",
                      "description": "Fee Detail",
                      "type": "object",
                      "properties": {
                        "FeeType": {
                          "id": "http://localhost:8000/schemas/v1.2/definitions/fees/fee_type.json#",
                          "description": "A description of the Fee type",
                          "type": "string",
                          "enum": ["Account Fee", "Incoming CHAPS Fee", "Outgoing CHAPS Fee", "Foreign Currency", "Foreign Currency Withdrawal Fee (% of Tx - Min £2 - Max £5)", "Non Sterling Transaction Fee (Cash Withdrawal)", "SEPA Fee", "Stopped Cheque Fee", "Copy of Cheque Fee", "Cheque Transaction Fee", "Manual Debit Fee", "Counter Draft", "Unpaid Transaction Fee", "Special Cheque Presentation", "Court Order Fee", "Bankers Draft Fee", "Statement Copy Fee", "Bankers Reference Fee", "Personalised Card Fee", "Sterling Travellers Cheque (% of Tx - Min £2 - Max £5)", "International Payments Charge", "Other", "Cash payment In", "Cash payment Out", "Daily Monitoring", "Weekly Monitoring", "Monthly Monitoring", "Status Enquiry", "Audit Letter", "Credits paid in via night Safe", "Credit paid In via Depos ATM", "Telepay or Teledebit Item", "Balance Handlng Fee", "Late payment", "Loan arrangement", "Early Repayment charge", "Over credit limit fee", "Return payment fee", "Payment Scheme Exchange Rate", "Payment Scheme Exchange Fee", "Payment Scheme Exchange Fee Rate", "Non-Sterling Transaction fee", "Non-Sterling Transaction fee rate", "Non-Sterling Purchase Fee", "Non-Sterling Purchase Fee rate", "Non-Sterling Cash Fee", "Non-Sterling Cash Fee Rate", "Foreign Purchase Fee", "Foreign Purchase Fee Rate", "Foreign Cash Fee", "Foreign Cash Fee Rate", "Early Repayment Charges", "Tiered arrangement fees", "Monthly Account Maintenance Fee", "UK Sterling Direct Debits", "Standing order", "Business Debit card transaction (excluding ATM)", "ATM withdrawals (from a non-group ATM)", "ATM withdrawals (from a group ATM)", "Internet Bulk Payment - batch", "Automated credit", "Automated credit - Telephone and Internet Banking", "Automated credit –Faster Payments inbound", "Internet Bulk Payment –per item", "Faster Payments outbound", "Transfer to an account outside of the group", "Cheque paid in (or Postal Order)", "Cheques Out", "Cash paid in", "Cash paid out at own counter", "Other debit", "Other credit", "Credit paid in at another bank", "Cash exchanged", "Bacs – batch file submitted", "Bacs – debit or credit item", "Cardnet envelope paid in", "Credit paid in via Night Safe - up to £5K", "International payment Internet banking", "Express International Moneymover Branch", "Standard International Moneymover Branch", "Non-urgent Euro (SEPA)1 Branch", "International draft payable abroad Branch", "Electronic payments received from abroad Up to £100", "Electronic payments received from abroad over £100", "Foreign cheque/draft", "Cheques/drafts (including dividend warrants) payable in foreign currency or Sterling drawn abroad", "Cheques/drafts (including dividend warrants) payable in foreign currency drawn in the UK", "Unpaid charge (if the cheque/draft is not honoured by the paying bank)", "Status enquiries abroad", "Status enquiries abroad (if sent electronically) additional", "After an international payment has been sent abroad - Beneficiary claiming non-receipt of funds (BCNR) ", "After an international payment has been sent abroad - Recalling a payment", "First legal mortgage over a property, such as business premises", "Second or subsequent legal mortgage over a property, such as a house or business premises", "Unpaid Item", "SMS Text alerts", "SME unsecured loan fee", "World Currency Withdrawal Fee", "World Currency Purchase Fee", "Europe Currently Withdrawal Fee", "Europe Purchase Fee", "Minimum Foreign Cash Withdrawal Fee", "Maximum Foreign Cash Withdrawal Fee", "Security Fee", "Early Redemption Charge", "Paid Referral Fee", "Unpaid Referral Fee"]
                        },
                        "Other": {
                          "description": "Describe other fee type",
                          "type": "string"
                        },
                        "StartPromotionOrFutureTerms": {
                          "description": "Describes the start date",
                          "id": "http://localhost:8000/schemas/v1.2/definitions/common/date.json#",
                          "type": "string",
                          "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                        },
                        "StopPromotionOrFutureTerms": {
                          "description": "Describes the end date",
                          "id": "http://localhost:8000/schemas/v1.2/definitions/common/date.json#",
                          "type": "string",
                          "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                        },
                        "LengthPromotionalInDays": {
                          "description": "Describes the length if only a duration is given instead of a date",
                          "type": "integer"
                        },
                        "DateOfChange": {
                          "description": "Date of the change if it refers to future terms",
                          "id": "http://localhost:8000/schemas/v1.2/definitions/common/date.json#",
                          "type": "string",
                          "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                        },
                        "FeeSubDetails": {
                          "id": "http://localhost:8000/schemas/v1.2/definitions/fees/fee_sub_details.json#",
                          "description": "Fee Sub Details",
                          "type": "object",
                          "properties": {
                            "FeeFrequency": {
                              "id": "http://localhost:8000/schemas/v1.2/definitions/fees/fee_frequency.json#",
                              "description": "Triggering frequency of the fee",
                              "type": "string",
                              "enum": ["Monthly", "Per Transaction - Amount", "Per Transaction - Percentage", "Per Occurrence", "Daily", "5 consecutive business days", "Weekly", "Statement Monthly", "Quarterly", "6 monthly", "Yearly", "On account anniversary", "Charging period", "Item", "Account opening", "Account Closing", "Academic Term", "One time payment at the start of the loan", "At the time of repayment", "per hour", "per sheet"]
                            },
                            "FeeAmount": {
                              "description": "Fee in GBP",
                              "type": "number"
                            },
                            "FeeRate": {
                              "description": "% Rate",
                              "type": "number"
                            },
                            "Negotiable": {
                              "description": "Indicates that this Fee Rate or Fee Amount is negotiable based on risk or other factor",
                              "type": "boolean"
                            },
                            "RepresentativeRate": {
                              "description": "Representative Rate",
                              "type": "number"
                            },
                            "FeeLowerTier": {
                              "description": "Lower occurrence / range boundary e.g. For returned cheques this could be 0, which means the first returned cheque fits into this range",
                              "type": "number"
                            },
                            "FeeHigherTier": {
                              "description": "Higher occurrence / range boundary e.g. For returned cheques this could be 10, which means the first 10 returned cheque fits into this range",
                              "type": "number"
                            },
                            "FeesAndChargesNotes": {
                              "description": "Supplementary information for fees and charges",
                              "type": "string"
                            }
                          },
                          "required": ["FeeFrequency", "FeeAmount", "Negotiable"],
                          "additionalProperties": false
                        }
                      },
                      "required": ["FeeType", "FeeSubDetails"],
                      "additionalProperties": false
                    }
                  },
                  "required": ["FeeSubType", "FeeDetail"],
                  "additionalProperties": false
                },
                "minItems": 1
              }
            },
            "required": ["FeeDetails"],
            "additionalProperties": false
          }
        },
        "required": ["ProductSubType", "Fees"],
        "additionalProperties": false
      },
      "minItems": 1
    },
    "Benefits": {
      "id": "http://localhost:8000/schemas/v1.2/definitions/benefits/benefit.json#",
      "description": "Benefit",
      "type": "object",
      "properties": {
        "Benefit": {
          "description": "Describe  one or more benefits if they exist",
          "type": "boolean"
        },
        "BenefitGroup": {
          "type": "array",
          "items": {
            "id": "http://localhost:8000/schemas/v1.2/definitions/benefits/benefit_group.json#",
            "description": "Benefit Interest Group",
            "type": "object",
            "properties": {
              "BenefitSubType": {
                "id": "http://localhost:8000/schemas/v1.2/definitions/common/offering_subtype.json#",
                "description": "Describes if the offering is promotional, regular or a description of a future state",
                "type": "string",
                "enum": ["Promotional", "Regular", "Future Regular Terms"]
              },
              "BenefitItem": {
                "id": "http://localhost:8000/schemas/v1.2/definitions/benefits/benefit_item.json#",
                "description": "Benefit Item",
                "type": "object",
                "properties": {
                  "StartPromotionOrFutureTerms": {
                    "description": "Describes the start date",
                    "id": "http://localhost:8000/schemas/v1.2/definitions/common/date.json#",
                    "type": "string",
                    "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                  },
                  "StopPromotionOrFutureTerms": {
                    "description": "Describes the end date",
                    "id": "http://localhost:8000/schemas/v1.2/definitions/common/date.json#",
                    "type": "string",
                    "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                  },
                  "LengthPromotionalInDays": {
                    "description": "Describes the length if only a duration is given instead of a date in days",
                    "type": "integer"
                  },
                  "DateOfChange": {
                    "description": "Date of the change if it refers to future terms",
                    "id": "http://localhost:8000/schemas/v1.2/definitions/common/date.json#",
                    "type": "string",
                    "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                  },
                  "BenefitDetail": {
                    "type": "array",
                    "items": {
                      "id": "http://localhost:8000/schemas/v1.2/definitions/benefits/benfit_detail.json#",
                      "description": "Benefit detail",
                      "type": "object",
                      "properties": {
                        "BenefitType": {
                          "description": "Type that represents the nature of the benefit",
                          "type": "string"
                        },
                        "BenefitName": {
                          "description": "The name of the benefit",
                          "type": "string"
                        },
                        "BenefitValue": {
                          "description": "The value or values permissible for a specific benefit for an individual product representing a product characteristic",
                          "type": "string"
                        },
                        "DefaultToAccounts": {
                          "description": "Is the benefit part of the default account",
                          "type": "boolean"
                        },
                        "BenefitID": {
                          "description": "Unique benefit identifier per organisation",
                          "type": "string"
                        },
                        "CriteriaType": {
                          "id": "http://localhost:8000/schemas/v1.2/definitions/benefits/benefit_criteria_type.json#",
                          "description": "Criteria that is required in order to be eligible for the Benefit",
                          "type": "string",
                          "enum": ["Deposit", "Direct Debit", "Other"]
                        },
                        "MinimumCriteria": {
                          "description": "Minimum amount for the criteria",
                          "type": "number"
                        },
                        "MaximumCriteria": {
                          "description": "Maximum amount for the criteria",
                          "type": "number"
                        },
                        "Counter": {
                          "description": "Counter for the criteria (e.g. number of DD)",
                          "type": "integer"
                        },
                        "BenefitDescription": {
                          "description": "A textual explanation of what the benefit is",
                          "type": "string"
                        },
                        "PromotionStartDate": {
                          "description": "If the benefit is temporal the start date is when the benefit comes into effect",
                          "id": "http://localhost:8000/schemas/v1.2/definitions/common/date.json#",
                          "type": "string",
                          "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                        },
                        "PromotionEndDate": {
                          "description": "If the benefit is temporal the end date is when the benefit is no longer applicable",
                          "id": "http://localhost:8000/schemas/v1.2/definitions/common/date.json#",
                          "type": "string",
                          "pattern": "^[0-9]{4}-(0[1-9]|(1[1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "required": ["BenefitItem"],
            "additionalProperties": false
          }
        }
      },
      "required": ["Benefit"],
      "additionalProperties": false
    }
  },
  "required": ["Organisation", "ProductName", "ProductIdentifier", "ProductTypeName", "ProductSegment", "ProductDescription", "TsandCs", "CustomerAccessChannels", "Currency", "MinimumLoanTerm", "MinimumLoanAmount", "MaximumLoanAmount", "PaymentHoliday", "LoanItem", "Eligibility", "FeesAndCharges", "Benefits"],
  "additionalProperties": false
}